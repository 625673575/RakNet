//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace RakNet {

public class PublicKey : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal PublicKey(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PublicKey obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~PublicKey() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          RakNetPINVOKE.CSharp_RakNet_delete_PublicKey(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public PublicKeyMode publicKeyMode {
    set {
      RakNetPINVOKE.CSharp_RakNet_PublicKey_publicKeyMode_set(swigCPtr, (int)value);
    } 
    get {
      PublicKeyMode ret = (PublicKeyMode)RakNetPINVOKE.CSharp_RakNet_PublicKey_publicKeyMode_get(swigCPtr);
      return ret;
    } 
  }

  public string remoteServerPublicKey {
    set {
      RakNetPINVOKE.CSharp_RakNet_PublicKey_remoteServerPublicKey_set(swigCPtr, value);
    } 
    get {
      string ret = RakNetPINVOKE.CSharp_RakNet_PublicKey_remoteServerPublicKey_get(swigCPtr);
      return ret;
    } 
  }

  public string myPublicKey {
    set {
      RakNetPINVOKE.CSharp_RakNet_PublicKey_myPublicKey_set(swigCPtr, value);
    } 
    get {
      string ret = RakNetPINVOKE.CSharp_RakNet_PublicKey_myPublicKey_get(swigCPtr);
      return ret;
    } 
  }

  public string myPrivateKey {
    set {
      RakNetPINVOKE.CSharp_RakNet_PublicKey_myPrivateKey_set(swigCPtr, value);
    } 
    get {
      string ret = RakNetPINVOKE.CSharp_RakNet_PublicKey_myPrivateKey_get(swigCPtr);
      return ret;
    } 
  }

  public PublicKey() : this(RakNetPINVOKE.CSharp_RakNet_new_PublicKey(), true) {
  }

}

}
