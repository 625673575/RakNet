//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
namespace RakNet
{

    class RakNetPINVOKE
    {
#if UNITY_EDITOR || UNITY_STANDALONE_WIN
        public const string LibName = "RakNet";
#else
#if UNITY_IOS
		public const string LibName = "__Internal";
#else
		public const string LibName = "RakNet";
#endif
#endif


        public class SWIGPendingException
        {
            [global::System.ThreadStatic]
            private static global::System.Exception pendingException = null;
            private static int numExceptionsPending = 0;

            public static bool Pending
            {
                get
                {
                    bool pending = false;
                    if (numExceptionsPending > 0)
                        if (pendingException != null)
                            pending = true;
                    return pending;
                }
            }

            public static void Set(global::System.Exception e)
            {
                if (pendingException != null)
                    throw new global::System.ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
                pendingException = e;
                lock (typeof(RakNetPINVOKE))
                {
                    numExceptionsPending++;
                }
            }

            public static global::System.Exception Retrieve()
            {
                global::System.Exception e = null;
                if (numExceptionsPending > 0)
                {
                    if (pendingException != null)
                    {
                        e = pendingException;
                        pendingException = null;
                        lock (typeof(RakNetPINVOKE))
                        {
                            numExceptionsPending--;
                        }
                    }
                }
                return e;
            }
        }


        protected class SWIGStringHelper
        {

            public delegate string SWIGStringDelegate(string message);
            static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

            [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
            public static extern void SWIGRegisterStringCallback_RakNet(SWIGStringDelegate stringDelegate);

            static string CreateString(string cString)
            {
                return cString;
            }

            static SWIGStringHelper()
            {
                SWIGRegisterStringCallback_RakNet(stringDelegate);
            }
        }

        static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


        static RakNetPINVOKE()
        {
        }
        [global::System.Runtime.InteropServices.DllImport(LibName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_Add(int a,int b);

        [global::System.Runtime.InteropServices.DllImport(LibName, CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_SWIG_CSHARP_NO_IMCLASS_STATIC_CONSTRUCTOR_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_ColumnDescriptor__SWIG_0();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_ColumnDescriptor(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_ColumnDescriptor__SWIG_1(string jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_ColumnDescriptor_columnName_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_ColumnDescriptor_columnName_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_ColumnDescriptor_columnType_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_ColumnDescriptor_columnType_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_Cell__SWIG_0();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_Cell(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Cell_Clear(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Cell_Set__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Cell_Set__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Cell_Set__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, double jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Cell_Set__SWIG_3(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Cell_Get__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, out int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Cell_Get__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, out double jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_Cell_ToString(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_Cell_CopyData(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_Cell__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_Cell_EstimateColumnType(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Cell_isEmpty_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_Cell_isEmpty_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Cell_i_set(global::System.Runtime.InteropServices.HandleRef jarg1, double jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern double CSharp_RakNet_Cell_i_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Cell_Set__SWIG_4(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Cell_Get__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, out int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_Cell_GetHelper(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Row_cells_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_Row_cells_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Row_UpdateCell__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, double jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Row_UpdateCell__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, string jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Row_UpdateCell__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, int jarg3, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_Row();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_Row(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_FilterQuery__SWIG_0();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_FilterQuery(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_FilterQuery__SWIG_1(uint jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FilterQuery_columnName_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_FilterQuery_columnName_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FilterQuery_columnIndex_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_FilterQuery_columnIndex_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FilterQuery_cellValue_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_FilterQuery_cellValue_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FilterQuery_operation_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_FilterQuery_operation_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_SortQuery_columnIndex_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_SortQuery_columnIndex_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_SortQuery_operation_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_SortQuery_operation_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_SortQuery();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_SortQuery(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_OnFileStruct_fileIndex_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_OnFileStruct_fileIndex_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_OnFileStruct_fileName_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_OnFileStruct_fileName_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_OnFileStruct_fileData_set(global::System.Runtime.InteropServices.HandleRef jarg1, IntPtr jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern IntPtr CSharp_RakNet_OnFileStruct_fileData_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_OnFileStruct_byteLengthOfThisFile_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_OnFileStruct_byteLengthOfThisFile_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_OnFileStruct_bytesDownloadedForThisFile_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_OnFileStruct_bytesDownloadedForThisFile_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_OnFileStruct_setID_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ushort CSharp_RakNet_OnFileStruct_setID_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_OnFileStruct_numberOfFilesInThisSet_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_OnFileStruct_numberOfFilesInThisSet_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_OnFileStruct_byteLengthOfThisSet_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_OnFileStruct_byteLengthOfThisSet_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_OnFileStruct_bytesDownloadedForThisSet_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_OnFileStruct_bytesDownloadedForThisSet_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_OnFileStruct_context_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_OnFileStruct_context_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_OnFileStruct_senderSystemAddress_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_OnFileStruct_senderSystemAddress_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_OnFileStruct_senderGuid_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_OnFileStruct_senderGuid_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_OnFileStruct();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_OnFileStruct_SetFileData(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_OnFileStruct(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileProgressStruct_onFileStruct_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_FileProgressStruct_onFileStruct_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileProgressStruct_partCount_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_FileProgressStruct_partCount_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileProgressStruct_partTotal_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_FileProgressStruct_partTotal_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileProgressStruct_dataChunkLength_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_FileProgressStruct_dataChunkLength_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileProgressStruct_firstDataChunk_set(global::System.Runtime.InteropServices.HandleRef jarg1, IntPtr jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern IntPtr CSharp_RakNet_FileProgressStruct_firstDataChunk_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileProgressStruct_iriDataChunk_set(global::System.Runtime.InteropServices.HandleRef jarg1, IntPtr jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern IntPtr CSharp_RakNet_FileProgressStruct_iriDataChunk_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileProgressStruct_iriWriteOffset_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_FileProgressStruct_iriWriteOffset_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileProgressStruct_senderSystemAddress_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_FileProgressStruct_senderSystemAddress_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileProgressStruct_senderGuid_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_FileProgressStruct_senderGuid_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileProgressStruct_allocateIrIDataChunkAutomatically_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_FileProgressStruct_allocateIrIDataChunkAutomatically_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_FileProgressStruct();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileProgressStruct_SetFirstDataChunk(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileProgressStruct_SetIriDataChunk(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_FileProgressStruct(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_DownloadCompleteStruct_setID_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ushort CSharp_RakNet_DownloadCompleteStruct_setID_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_DownloadCompleteStruct_numberOfFilesInThisSet_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_DownloadCompleteStruct_numberOfFilesInThisSet_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_DownloadCompleteStruct_byteLengthOfThisSet_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_DownloadCompleteStruct_byteLengthOfThisSet_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_DownloadCompleteStruct_senderSystemAddress_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_DownloadCompleteStruct_senderSystemAddress_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_DownloadCompleteStruct_senderGuid_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_DownloadCompleteStruct_senderGuid_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_DownloadCompleteStruct();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_DownloadCompleteStruct(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_StatisticsToStringHelper(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet___GET_TIME_64BIT_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_MAX_ALLOCA_STACK_ALLOCATION_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__USE_RAK_MEMORY_OVERRIDE_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_OPEN_SSL_CLIENT_SUPPORT_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_BITSTREAM_STACK_ALLOCATION_SIZE_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_MAXIMUM_NUMBER_OF_INTERNAL_IDS_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_DATAGRAM_MESSAGE_ID_ARRAY_LENGTH_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RESEND_BUFFER_ARRAY_LENGTH_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RESEND_BUFFER_ARRAY_MASK_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_GET_TIME_SPIKE_LIMIT_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_USE_SLIDING_WINDOW_CONGESTION_CONTROL_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_PREALLOCATE_LARGE_MESSAGES_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RAKNET_SUPPORT_IPV6_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RAKSTRING_TYPE_IS_UNICODE_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RPC4_GLOBAL_REGISTRATION_MAX_FUNCTIONS_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RPC4_GLOBAL_REGISTRATION_MAX_FUNCTION_NAME_LENGTH_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_XBOX_BYPASS_SECURITY_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_BUFFERED_PACKETS_PAGE_SIZE_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_INTERNAL_PACKET_PAGE_SIZE_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RAKPEER_USER_THREADED_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_USE_ALLOCA_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_LIBCAT_SECURITY_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_ConnectionGraph2_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_DirectoryDeltaTransfer_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_FileListTransfer_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_FullyConnectedMesh_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_FullyConnectedMesh2_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_MessageFilter_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_NatPunchthroughClient_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_NatPunchthroughServer_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_NatTypeDetectionClient_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_NatTypeDetectionServer_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_PacketLogger_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_ReadyEvent_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_ReplicaManager3_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_Router2_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_RPC4Plugin_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_TeamBalancer_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_TeamManager_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_UDPProxyClient_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_UDPProxyCoordinator_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_UDPProxyServer_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_ConsoleServer_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_RakNetTransport_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_TelnetTransport_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_TCPInterface_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_LogCommandParser_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_RakNetCommandParser_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_EmailSender_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_HTTPConnection_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_HTTPConnection2_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_PacketizedTCP_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_TwoWayAuthentication_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_CloudClient_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_CloudServer_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_DynDNS_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_Rackspace_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_FileOperations_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_UDPForwarder_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_StatisticsHistory_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_LibVoice_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__RAKNET_SUPPORT_RelayPlugin_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_SimpleMutex();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_SimpleMutex(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_SimpleMutex_Lock(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_SimpleMutex_Unlock(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_MAX_RPC_MAP_SIZE_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_UNDEFINED_RPC_INDEX_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_PRINTF_64_BIT_MODIFIER_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_PublicKey_publicKeyMode_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_PublicKey_publicKeyMode_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_PublicKey_remoteServerPublicKey_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_PublicKey_remoteServerPublicKey_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_PublicKey_myPublicKey_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_PublicKey_myPublicKey_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_PublicKey_myPrivateKey_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_PublicKey_myPrivateKey_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_PublicKey();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_PublicKey(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_SocketDescriptor__SWIG_0();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_SocketDescriptor__SWIG_1(ushort jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_SocketDescriptor_port_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ushort CSharp_RakNet_SocketDescriptor_port_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_SocketDescriptor_hostAddress_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_SocketDescriptor_hostAddress_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_SocketDescriptor_socketFamily_set(global::System.Runtime.InteropServices.HandleRef jarg1, short jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern short CSharp_RakNet_SocketDescriptor_socketFamily_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_SocketDescriptor_remotePortRakNetWasStartedOn_PS3_PSP2_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ushort CSharp_RakNet_SocketDescriptor_remotePortRakNetWasStartedOn_PS3_PSP2_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_SocketDescriptor_chromeInstance_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_SocketDescriptor_chromeInstance_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_SocketDescriptor_blockingSocket_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_SocketDescriptor_blockingSocket_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_SocketDescriptor_extraSocketOptions_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_SocketDescriptor_extraSocketOptions_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_SocketDescriptor(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_NonNumericHostString(string jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_SystemAddress__SWIG_0();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_SystemAddress__SWIG_1(string jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_SystemAddress__SWIG_2(string jarg1, ushort jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_SystemAddress_debugPort_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ushort CSharp_RakNet_SystemAddress_debugPort_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_SystemAddress_size();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_SystemAddress_ToInteger(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern byte CSharp_RakNet_SystemAddress_GetIPVersion(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_SystemAddress_GetIPPROTO(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_SystemAddress_SetToLoopback__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_SystemAddress_SetToLoopback__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_SystemAddress_IsLoopback(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_SystemAddress_ToString__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, char jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_SystemAddress_ToString__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_SystemAddress_ToString__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, string jarg3, char jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_SystemAddress_FromString__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, char jarg3, int jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_SystemAddress_FromString__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, char jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_SystemAddress_FromString__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_SystemAddress_FromStringExplicitPort__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ushort jarg3, int jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_SystemAddress_FromStringExplicitPort__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ushort jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_SystemAddress_CopyPort(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_SystemAddress_EqualsExcludingPort(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ushort CSharp_RakNet_SystemAddress_GetPort(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ushort CSharp_RakNet_SystemAddress_GetPortNetworkOrder(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_SystemAddress_SetPortHostOrder(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_SystemAddress_SetPortNetworkOrder(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_SystemAddress_SetBinaryAddress__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, char jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_SystemAddress_SetBinaryAddress__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_SystemAddress_ToString_Old__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, string jarg3, char jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_SystemAddress_ToString_Old__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, string jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_SystemAddress_FixForIPVersion(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_SystemAddress_IsLANAddress(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_SystemAddress_CopyData(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_SystemAddress_Equals(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_SystemAddress_OpNotEqual(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_SystemAddress_OpGreater(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_SystemAddress_OpLess(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_SystemAddress_systemIndex_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ushort CSharp_RakNet_SystemAddress_systemIndex_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_SystemAddress(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakNetGUID__SWIG_0();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakNetGUID__SWIG_1(ulong jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetGUID_g_set(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ulong CSharp_RakNet_RakNetGUID_g_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_RakNetGUID_ToString(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakNetGUID_FromString(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakNetGUID_ToUint32(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetGUID_CopyData(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetGUID_systemIndex_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ushort CSharp_RakNet_RakNetGUID_systemIndex_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakNetGUID_size();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakNetGUID_Equals(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakNetGUID_OpNotEqual(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakNetGUID_OpGreater(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakNetGUID_OpLess(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_RakNetGUID(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_AddressOrGUID_rakNetGuid_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_AddressOrGUID_rakNetGuid_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_AddressOrGUID_systemAddress_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_AddressOrGUID_systemAddress_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ushort CSharp_RakNet_AddressOrGUID_GetSystemIndex(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_AddressOrGUID_IsUndefined(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_AddressOrGUID_SetUndefined(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_AddressOrGUID_ToInteger(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_AddressOrGUID_ToString(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_AddressOrGUID__SWIG_0();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_AddressOrGUID__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_AddressOrGUID__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_AddressOrGUID__SWIG_3(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_AddressOrGUID__SWIG_4(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_AddressOrGUID_CopyData__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_AddressOrGUID_CopyData__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_AddressOrGUID_CopyData__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_AddressOrGUID_Equals(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_AddressOrGUID(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Packet_systemAddress_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_Packet_systemAddress_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Packet_guid_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_Packet_guid_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Packet_length_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_Packet_length_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Packet_bitSize_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_Packet_bitSize_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Packet_data_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_Packet_data_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Packet_deleteData_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_Packet_deleteData_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Packet_wasGeneratedLocally_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_Packet_wasGeneratedLocally_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_Packet();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Packet_SetPacketData(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_Packet(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ushort CSharp_RakNet_UNASSIGNED_PLAYER_INDEX_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ulong CSharp_RakNet_UNASSIGNED_NETWORK_ID_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_PING_TIMES_ARRAY_SIZE_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_uint24_t_val_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_uint24_t_val_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_uint24_t__SWIG_0();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_uint24_t__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_uint24_t_OpPlusPlus(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_uint24_t_OpMinusMinus(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_uint24_t_CopyData__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_uint24_t_Equals__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_uint24_t_OpNotEqual__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_uint24_t_OpGreater__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_uint24_t_OpLess__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_uint24_t_OpPlus__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_uint24_t_OpMinus__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_uint24_t_OpDivide__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_uint24_t_OpMultiply__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_uint24_t__SWIG_2(uint jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_uint24_t_CopyData__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_uint24_t_Equals__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_uint24_t_OpNotEqual__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_uint24_t_OpGreater__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_uint24_t_OpLess__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_uint24_t_OpPlus__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_uint24_t_OpMinus__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_uint24_t_OpDivide__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_uint24_t_OpMultiply__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_uint24_t(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakString__SWIG_0();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakString__SWIG_1(char jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakString__SWIG_2(byte jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakString__SWIG_3(string jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_RakString(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakString__SWIG_4(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_RakString_C_String(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_RakString_C_StringUnsafe(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakString_CopyData__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakString_CopyData__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakString_CopyData__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakString_CopyData__SWIG_4(global::System.Runtime.InteropServices.HandleRef jarg1, char jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern byte CSharp_RakNet_RakString_OpArray(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakString_Find__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakString_Find__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakString_Equals__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakString_Equals__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakString_OpLess(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakString_OpLessEquals(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakString_OpGreater(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakString_OpGreaterEquals(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakString_OpNotEqual__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakString_OpNotEqual__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_RakString_ToLower(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_RakString_ToUpper(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakString_Set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakString_Assign(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, uint jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakString_IsEmpty(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakString_GetLength(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakString_GetLengthUTF8(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakString_Replace(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, uint jarg3, byte jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakString_SetChar__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, byte jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakString_SetChar__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakString_Truncate(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakString_TruncateUTF8(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakString_SubStr(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakString_Erase(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakString_TerminateAtFirstCharacter(global::System.Runtime.InteropServices.HandleRef jarg1, char jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakString_TerminateAtLastCharacter(global::System.Runtime.InteropServices.HandleRef jarg1, char jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakString_StartAfterFirstCharacter(global::System.Runtime.InteropServices.HandleRef jarg1, char jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakString_StartAfterLastCharacter(global::System.Runtime.InteropServices.HandleRef jarg1, char jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakString_GetCharacterCount(global::System.Runtime.InteropServices.HandleRef jarg1, char jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakString_RemoveCharacter(global::System.Runtime.InteropServices.HandleRef jarg1, char jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakString_NonVariadic(string jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakString_ToInteger__SWIG_0(string jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakString_ToInteger__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakString_ReadIntFromSubstring(string jarg1, uint jarg2, uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakString_StrCmp(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakString_StrNCmp(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakString_StrICmp(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakString_Clear(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakString_Printf(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakString_IPAddressMatch(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakString_ContainsNonprintableExceptSpaces(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakString_IsEmailAddress(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakString_URLEncode(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakString_URLDecode(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakString_SplitURI(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakString_SQLEscape(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakString_FormatForPOST__SWIG_0(string jarg1, string jarg2, string jarg3, string jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakString_FormatForPOST__SWIG_1(string jarg1, string jarg2, string jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakString_FormatForPUT__SWIG_0(string jarg1, string jarg2, string jarg3, string jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakString_FormatForPUT__SWIG_1(string jarg1, string jarg2, string jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakString_FormatForGET__SWIG_0(string jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakString_FormatForGET__SWIG_1(string jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakString_FormatForDELETE__SWIG_0(string jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakString_FormatForDELETE__SWIG_1(string jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakString_MakeFilePath(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakString_FreeMemory();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakString_FreeMemoryNoMutex();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakString_Serialize__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakString_Serialize__SWIG_1(string jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakString_SerializeCompressed__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, byte jarg3, bool jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakString_SerializeCompressed__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, byte jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakString_SerializeCompressed__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakString_SerializeCompressed__SWIG_3(string jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, byte jarg3, bool jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakString_SerializeCompressed__SWIG_4(string jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, byte jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakString_SerializeCompressed__SWIG_5(string jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakString_Deserialize__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakString_Deserialize__SWIG_1(string jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakString_DeserializeCompressed__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, bool jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakString_DeserializeCompressed__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakString_DeserializeCompressed__SWIG_2(string jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, bool jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakString_DeserializeCompressed__SWIG_3(string jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_RakString_ToString__SWIG_0(long jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_RakString_ToString__SWIG_1(ulong jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakString_GetSizeToAllocate(uint jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakString_SharedString_refCountMutex_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakString_SharedString_refCountMutex_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakString_SharedString_refCount_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakString_SharedString_refCount_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakString_SharedString_bytesUsed_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakString_SharedString_bytesUsed_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakString_SharedString_bigString_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_RakString_SharedString_bigString_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakString_SharedString_c_str_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_RakString_SharedString_c_str_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakString_SharedString_smallString_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_RakString_SharedString_smallString_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakString_SharedString();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_RakString_SharedString(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakString_RakStringComp(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakString_LockMutex();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakString_UnlockMutex();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakString_AppendBytes(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_OpPlus__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakWString__SWIG_0();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakWString__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakWString__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakWString__SWIG_3(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakWString__SWIG_4(string jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_RakWString(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakWString_C_String(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakWString_CopyData__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakWString_CopyData__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakWString_CopyData__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakWString_CopyData__SWIG_4(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakWString_Equals(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakWString_OpLess(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakWString_OpLessEquals(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakWString_OpGreater(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakWString_OpGreaterEquals(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakWString_OpNotEqual(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakWString_Set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakWString_IsEmpty(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakWString_GetLength(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakWString_ToInteger(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakWString_StrCmp(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakWString_StrICmp(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakWString_Clear(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakWString_Printf(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakWString_FPrintf(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakWString_Serialize__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakWString_Serialize__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakWString_Deserialize__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakWString_Deserialize__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);
	
        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_BitStream_GetInstance();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_DestroyInstance(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_BitStream__SWIG_0();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_BitStream__SWIG_1(uint jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_BitStream__SWIG_2([In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg1, uint jarg2, bool jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_BitStream(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_Reset(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeFloat16(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref float jarg3, float jarg4, float jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeBits__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg3, uint jarg4, bool jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeBits__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_Read__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_Read__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_Write__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_Write__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteFloat16(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2, float jarg3, float jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadFloat16(global::System.Runtime.InteropServices.HandleRef jarg1, out float jarg2, float jarg3, float jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_ResetReadPointer(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_ResetWritePointer(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_AssertStreamEmpty(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_PrintBits(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_PrintHex(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_IgnoreBits(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_IgnoreBytes(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_SetWriteOffset(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_BitStream_GetNumberOfBitsUsed(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_BitStream_GetWriteOffset(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_BitStream_GetNumberOfBytesUsed(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_BitStream_GetReadOffset(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_SetReadOffset(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_BitStream_GetNumberOfUnreadBits(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_SetData(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteBits__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, uint jarg3, bool jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteBits__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteAlignedBytes(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_EndianSwapBytes(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadAlignedBytes(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_AlignWriteToByteBoundary(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_AlignReadToByteBoundary(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadBits__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, uint jarg3, bool jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadBits__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_Write0(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_Write1(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadBit(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_AssertCopyData(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_SetNumberOfBitsAllocated(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_AddBitsAndReallocate(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_BitStream_GetNumberOfBitsAllocated(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_PadWithZeroToByteLength(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_BitStream_NumberOfLeadingZeroes__SWIG_0(byte jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_BitStream_NumberOfLeadingZeroes__SWIG_1(ushort jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_BitStream_NumberOfLeadingZeroes__SWIG_2(uint jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_BitStream_NumberOfLeadingZeroes__SWIG_3(ulong jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_BitStream_NumberOfLeadingZeroes__SWIG_4(sbyte jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_BitStream_NumberOfLeadingZeroes__SWIG_5(short jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_BitStream_NumberOfLeadingZeroes__SWIG_6(int jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_BitStream_NumberOfLeadingZeroes__SWIG_7(long jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_Write__SWIG_3(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_Write__SWIG_4(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteCompressed__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteCompressed__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_DoEndianSwap();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_IsBigEndian();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_IsNetworkOrder();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_IsNetworkOrderInternal();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_ReverseBytes([In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_ReverseBytesInPlace([In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_BitStream_CSharpStringReader(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_CSharpByteReader(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_BitStream_CSharpStringReaderCompressedDelta(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_BitStream_CSharpStringReaderDelta(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_BitStream_CSharpStringReaderCompressed(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_Write__SWIG_6(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_BitStream_CSharpCopyDataHelper(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_BitStream_CSharpPrintBitsHelper(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_BitStream_CSharpPrintHexHelper(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_Serialize__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadAlignedBytesSafe__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, int jarg3, int jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadAlignedBytesSafe__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, uint jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteAlignedVar8(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadAlignedVar8(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteAlignedVar16(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadAlignedVar16(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteAlignedVar32(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadAlignedVar32(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteAlignedBytesSafe(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, uint jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_Serialize__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref bool jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_Serialize__SWIG_3(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref byte jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_Serialize__SWIG_4(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref short jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_Serialize__SWIG_5(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref ushort jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_Serialize__SWIG_6(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_Serialize__SWIG_7(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref long jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_Serialize__SWIG_8(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref float jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_Serialize__SWIG_9(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_Serialize__SWIG_10(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_Serialize__SWIG_11(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeDelta__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref bool jarg3, bool jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeDelta__SWIG_3(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref bool jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeDelta__SWIG_4(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref byte jarg3, byte jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeDelta__SWIG_5(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref byte jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeDelta__SWIG_6(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref short jarg3, short jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeDelta__SWIG_7(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref short jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeDelta__SWIG_8(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref ushort jarg3, ushort jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeDelta__SWIG_9(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref ushort jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeDelta__SWIG_10(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref int jarg3, int jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeDelta__SWIG_11(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeDelta__SWIG_12(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref long jarg3, long jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeDelta__SWIG_13(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref long jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeDelta__SWIG_14(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref float jarg3, float jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeDelta__SWIG_15(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref float jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeDelta__SWIG_16(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeDelta__SWIG_17(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeDelta__SWIG_18(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeDelta__SWIG_19(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeDelta__SWIG_20(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeDelta__SWIG_21(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeCompressed__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref bool jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeCompressed__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref byte jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeCompressed__SWIG_3(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref short jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeCompressed__SWIG_4(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref ushort jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeCompressed__SWIG_5(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeCompressed__SWIG_6(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref long jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeCompressed__SWIG_7(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref float jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeCompressed__SWIG_8(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeCompressed__SWIG_9(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeCompressed__SWIG_10(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeCompressedDelta__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref bool jarg3, bool jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeCompressedDelta__SWIG_3(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref bool jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeCompressedDelta__SWIG_4(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref byte jarg3, byte jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeCompressedDelta__SWIG_5(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref byte jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeCompressedDelta__SWIG_6(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref short jarg3, short jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeCompressedDelta__SWIG_7(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref short jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeCompressedDelta__SWIG_8(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref ushort jarg3, ushort jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeCompressedDelta__SWIG_9(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref ushort jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeCompressedDelta__SWIG_10(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref int jarg3, int jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeCompressedDelta__SWIG_11(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeCompressedDelta__SWIG_12(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref long jarg3, long jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeCompressedDelta__SWIG_13(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref long jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeCompressedDelta__SWIG_14(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref float jarg3, float jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeCompressedDelta__SWIG_15(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, ref float jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeCompressedDelta__SWIG_16(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeCompressedDelta__SWIG_17(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeCompressedDelta__SWIG_18(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeCompressedDelta__SWIG_19(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeCompressedDelta__SWIG_20(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_SerializeCompressedDelta__SWIG_21(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_Write__SWIG_8(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_Write__SWIG_9(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_Write__SWIG_10(global::System.Runtime.InteropServices.HandleRef jarg1, char jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_Write__SWIG_11(global::System.Runtime.InteropServices.HandleRef jarg1, short jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_Write__SWIG_12(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_Write__SWIG_13(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_Write__SWIG_14(global::System.Runtime.InteropServices.HandleRef jarg1, long jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_Write__SWIG_15(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_Write__SWIG_16(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_Write__SWIG_17(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_Write__SWIG_18(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteDelta__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteDelta__SWIG_3(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteDelta__SWIG_4(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, bool jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteDelta__SWIG_5(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteDelta__SWIG_6(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2, byte jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteDelta__SWIG_7(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteDelta__SWIG_8(global::System.Runtime.InteropServices.HandleRef jarg1, char jarg2, char jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteDelta__SWIG_9(global::System.Runtime.InteropServices.HandleRef jarg1, char jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteDelta__SWIG_10(global::System.Runtime.InteropServices.HandleRef jarg1, short jarg2, short jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteDelta__SWIG_11(global::System.Runtime.InteropServices.HandleRef jarg1, short jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteDelta__SWIG_12(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2, ushort jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteDelta__SWIG_13(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteDelta__SWIG_14(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteDelta__SWIG_15(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteDelta__SWIG_16(global::System.Runtime.InteropServices.HandleRef jarg1, long jarg2, long jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteDelta__SWIG_17(global::System.Runtime.InteropServices.HandleRef jarg1, long jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteDelta__SWIG_18(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2, float jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteDelta__SWIG_19(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteDelta__SWIG_20(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteDelta__SWIG_21(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteDelta__SWIG_22(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteDelta__SWIG_23(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteDelta__SWIG_24(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteDelta__SWIG_25(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteCompressed__SWIG_5(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteCompressed__SWIG_6(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteCompressed__SWIG_7(global::System.Runtime.InteropServices.HandleRef jarg1, char jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteCompressed__SWIG_8(global::System.Runtime.InteropServices.HandleRef jarg1, short jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteCompressed__SWIG_9(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteCompressed__SWIG_10(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteCompressed__SWIG_11(global::System.Runtime.InteropServices.HandleRef jarg1, long jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteCompressed__SWIG_12(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteCompressed__SWIG_13(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteCompressed__SWIG_14(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteCompressed__SWIG_15(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteCompressedDelta__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteCompressedDelta__SWIG_3(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteCompressedDelta__SWIG_4(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, bool jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteCompressedDelta__SWIG_5(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteCompressedDelta__SWIG_6(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2, byte jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteCompressedDelta__SWIG_7(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteCompressedDelta__SWIG_8(global::System.Runtime.InteropServices.HandleRef jarg1, char jarg2, char jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteCompressedDelta__SWIG_9(global::System.Runtime.InteropServices.HandleRef jarg1, char jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteCompressedDelta__SWIG_10(global::System.Runtime.InteropServices.HandleRef jarg1, short jarg2, short jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteCompressedDelta__SWIG_11(global::System.Runtime.InteropServices.HandleRef jarg1, short jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteCompressedDelta__SWIG_12(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2, ushort jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteCompressedDelta__SWIG_13(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteCompressedDelta__SWIG_14(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteCompressedDelta__SWIG_15(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteCompressedDelta__SWIG_16(global::System.Runtime.InteropServices.HandleRef jarg1, long jarg2, long jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteCompressedDelta__SWIG_17(global::System.Runtime.InteropServices.HandleRef jarg1, long jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteCompressedDelta__SWIG_18(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2, float jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteCompressedDelta__SWIG_19(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteCompressedDelta__SWIG_20(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteCompressedDelta__SWIG_21(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteCompressedDelta__SWIG_22(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteCompressedDelta__SWIG_23(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteCompressedDelta__SWIG_24(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_BitStream_WriteCompressedDelta__SWIG_25(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_Read__SWIG_3(global::System.Runtime.InteropServices.HandleRef jarg1, out bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_Read__SWIG_4(global::System.Runtime.InteropServices.HandleRef jarg1, out byte jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_Read__SWIG_5(global::System.Runtime.InteropServices.HandleRef jarg1, out short jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_Read__SWIG_6(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_Read__SWIG_7(global::System.Runtime.InteropServices.HandleRef jarg1, out int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_Read__SWIG_8(global::System.Runtime.InteropServices.HandleRef jarg1, out long jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_Read__SWIG_9(global::System.Runtime.InteropServices.HandleRef jarg1, out float jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_Read__SWIG_10(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_Read__SWIG_11(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_Read__SWIG_12(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadDelta__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, out bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadDelta__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, out byte jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadDelta__SWIG_3(global::System.Runtime.InteropServices.HandleRef jarg1, out short jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadDelta__SWIG_4(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadDelta__SWIG_5(global::System.Runtime.InteropServices.HandleRef jarg1, out int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadDelta__SWIG_6(global::System.Runtime.InteropServices.HandleRef jarg1, out long jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadDelta__SWIG_7(global::System.Runtime.InteropServices.HandleRef jarg1, out float jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadDelta__SWIG_8(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadDelta__SWIG_9(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadDelta__SWIG_10(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadCompressed__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, out bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadCompressed__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, out byte jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadCompressed__SWIG_3(global::System.Runtime.InteropServices.HandleRef jarg1, out short jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadCompressed__SWIG_4(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadCompressed__SWIG_5(global::System.Runtime.InteropServices.HandleRef jarg1, out int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadCompressed__SWIG_6(global::System.Runtime.InteropServices.HandleRef jarg1, out long jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadCompressed__SWIG_7(global::System.Runtime.InteropServices.HandleRef jarg1, out float jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadCompressed__SWIG_8(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadCompressed__SWIG_9(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadCompressed__SWIG_10(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadCompressedDelta__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, out bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadCompressedDelta__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, out byte jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadCompressedDelta__SWIG_3(global::System.Runtime.InteropServices.HandleRef jarg1, out short jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadCompressedDelta__SWIG_4(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadCompressedDelta__SWIG_5(global::System.Runtime.InteropServices.HandleRef jarg1, out int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadCompressedDelta__SWIG_6(global::System.Runtime.InteropServices.HandleRef jarg1, out long jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadCompressedDelta__SWIG_7(global::System.Runtime.InteropServices.HandleRef jarg1, out float jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadCompressedDelta__SWIG_8(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadCompressedDelta__SWIG_9(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_BitStream_ReadCompressedDelta__SWIG_10(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_MAX_UNSIGNED_LONG_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_ByteQueue();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_ByteQueue(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_ByteQueue_GetBytesWritten(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_ByteQueue_IncrementReadOffset(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_ByteQueue_DecrementReadOffset(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_ByteQueue_Clear(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_ByteQueue_Print(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_ByteQueue_WriteBytes(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, uint jarg3, string jarg4, uint jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_ByteQueue_ReadBytes(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, uint jarg3, bool jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_ByteQueue_PeekContiguousBytesHelper(global::System.Runtime.InteropServices.HandleRef jarg1, out uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetStatistics_valueOverLastSecond_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetStatistics_valueOverLastSecond_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetStatistics_runningTotal_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetStatistics_runningTotal_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetStatistics_connectionStartTime_set(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ulong CSharp_RakNet_RakNetStatistics_connectionStartTime_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetStatistics_isLimitedByCongestionControl_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakNetStatistics_isLimitedByCongestionControl_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetStatistics_BPSLimitByCongestionControl_set(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ulong CSharp_RakNet_RakNetStatistics_BPSLimitByCongestionControl_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetStatistics_isLimitedByOutgoingBandwidthLimit_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakNetStatistics_isLimitedByOutgoingBandwidthLimit_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetStatistics_BPSLimitByOutgoingBandwidthLimit_set(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ulong CSharp_RakNet_RakNetStatistics_BPSLimitByOutgoingBandwidthLimit_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetStatistics_messageInSendBuffer_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetStatistics_messageInSendBuffer_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetStatistics_bytesInSendBuffer_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetStatistics_bytesInSendBuffer_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetStatistics_messagesInResendBuffer_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakNetStatistics_messagesInResendBuffer_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetStatistics_bytesInResendBuffer_set(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ulong CSharp_RakNet_RakNetStatistics_bytesInResendBuffer_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetStatistics_packetlossLastSecond_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern float CSharp_RakNet_RakNetStatistics_packetlossLastSecond_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetStatistics_packetlossTotal_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern float CSharp_RakNet_RakNetStatistics_packetlossTotal_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetStatistics_SetBytesInSendBuffer(global::System.Runtime.InteropServices.HandleRef jarg1, [Out, MarshalAs(UnmanagedType.LPArray)]double[] jarg2, int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetStatistics_SetMessageInSendBuffer(global::System.Runtime.InteropServices.HandleRef jarg1, [Out, MarshalAs(UnmanagedType.LPArray)]uint[] jarg2, int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetStatistics_SetRunningTotal(global::System.Runtime.InteropServices.HandleRef jarg1, [Out, MarshalAs(UnmanagedType.LPArray)]ulong[] jarg2, int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetStatistics_SetValueOverLastSecond(global::System.Runtime.InteropServices.HandleRef jarg1, [Out, MarshalAs(UnmanagedType.LPArray)]ulong[] jarg2, int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakNetStatistics();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_RakNetStatistics(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_NetworkIDObject();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_NetworkIDObject(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NetworkIDObject_SetNetworkIDManagerOrig(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NetworkIDObject_SetNetworkIDManagerOrigSwigExplicitNetworkIDObject(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_NetworkIDObject_GetNetworkIDManager(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_NetworkIDObject_GetNetworkIDManagerSwigExplicitNetworkIDObject(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ulong CSharp_RakNet_NetworkIDObject_GetNetworkID(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ulong CSharp_RakNet_NetworkIDObject_GetNetworkIDSwigExplicitNetworkIDObject(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NetworkIDObject_SetNetworkID(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NetworkIDObject_SetNetworkIDSwigExplicitNetworkIDObject(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NetworkIDObject_director_connect(global::System.Runtime.InteropServices.HandleRef jarg1, NetworkIDObject.SwigDelegateNetworkIDObject_0 delegate0, NetworkIDObject.SwigDelegateNetworkIDObject_1 delegate1, NetworkIDObject.SwigDelegateNetworkIDObject_2 delegate2, NetworkIDObject.SwigDelegateNetworkIDObject_3 delegate3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_NETWORK_ID_MANAGER_HASH_LENGTH_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_NetworkIDManager_GetInstance();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NetworkIDManager_DestroyInstance(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_NetworkIDManager();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_NetworkIDManager(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NetworkIDManager_Clear(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_NetworkIDManager_GET_BASE_OBJECT_FROM_IDORIG(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_PluginInterface2();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_PluginInterface2(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_PluginInterface2_UsesReliabilityLayer(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_PluginInterface2_OnReliabilityLayerNotification(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, uint jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, bool jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_PluginInterface2_GetRakPeerInterface(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_PluginInterface2_GetMyGUIDUnified(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_PluginInterface2_SetTCPInterface(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeerInterface_GetInstance();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_DestroyInstance(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_RakPeerInterface(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakPeerInterface_Startup__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, uint jarg4, int jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakPeerInterface_Startup__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeerInterface_InitializeSecurity__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3, bool jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeerInterface_InitializeSecurity__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_DisableSecurity(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_AddToSecurityExceptionList(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_RemoveFromSecurityExceptionList(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeerInterface_IsInSecurityExceptionList(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_SetMaximumIncomingConnections(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakPeerInterface_GetMaximumIncomingConnections(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ushort CSharp_RakNet_RakPeerInterface_NumberOfConnections(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_SetIncomingPassword__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakPeerInterface_Connect__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, int jarg5, global::System.Runtime.InteropServices.HandleRef jarg6, uint jarg7, uint jarg8, uint jarg9, uint jarg10);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakPeerInterface_Connect__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, int jarg5, global::System.Runtime.InteropServices.HandleRef jarg6, uint jarg7, uint jarg8, uint jarg9);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakPeerInterface_Connect__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, int jarg5, global::System.Runtime.InteropServices.HandleRef jarg6, uint jarg7, uint jarg8);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakPeerInterface_Connect__SWIG_3(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, int jarg5, global::System.Runtime.InteropServices.HandleRef jarg6, uint jarg7);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakPeerInterface_Connect__SWIG_4(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, int jarg5, global::System.Runtime.InteropServices.HandleRef jarg6);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakPeerInterface_Connect__SWIG_5(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, int jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_Shutdown__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, byte jarg3, int jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_Shutdown__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, byte jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_Shutdown__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeerInterface_IsActive(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakPeerInterface_GetNextSendReceipt(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakPeerInterface_IncrementNextSendReceipt(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakPeerInterface_Send__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3, int jarg4, int jarg5, char jarg6, global::System.Runtime.InteropServices.HandleRef jarg7, bool jarg8, uint jarg9);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakPeerInterface_Send__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3, int jarg4, int jarg5, char jarg6, global::System.Runtime.InteropServices.HandleRef jarg7, bool jarg8);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_SendLoopback__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakPeerInterface_Send__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3, int jarg4, char jarg5, global::System.Runtime.InteropServices.HandleRef jarg6, bool jarg7, uint jarg8);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakPeerInterface_Send__SWIG_3(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3, int jarg4, char jarg5, global::System.Runtime.InteropServices.HandleRef jarg6, bool jarg7);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeerInterface_Receive(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_DeallocatePacket(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakPeerInterface_GetMaximumNumberOfPeers(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_CloseConnection__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, bool jarg3, byte jarg4, int jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_CloseConnection__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, bool jarg3, byte jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_CloseConnection__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, bool jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakPeerInterface_GetConnectionState(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_CancelConnectionAttempt(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakPeerInterface_GetIndexFromSystemAddress(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeerInterface_GetSystemAddressFromIndex(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeerInterface_GetGUIDFromIndex(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_GetSystemList(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_AddToBanList__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_AddToBanList__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_RemoveFromBanList(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_ClearBanList(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeerInterface_IsBanned(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_SetLimitIPConnectionFrequency(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_Ping__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeerInterface_Ping__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ushort jarg3, bool jarg4, uint jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeerInterface_Ping__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ushort jarg3, bool jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakPeerInterface_GetAveragePing(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakPeerInterface_GetLastPing(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakPeerInterface_GetLowestPing(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_SetOccasionalPing(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ulong CSharp_RakNet_RakPeerInterface_GetClockDifferential(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_SetOfflinePingResponse__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeerInterface_GetInternalID__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeerInterface_GetInternalID__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeerInterface_GetInternalID__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_SetInternalID__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_SetInternalID__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeerInterface_GetExternalID(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeerInterface_GetMyGUID(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeerInterface_GetMyBoundAddress__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeerInterface_GetMyBoundAddress__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ulong CSharp_RakNet_RakPeerInterface_Get64BitUniqueRandomNumber();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeerInterface_GetGuidFromSystemAddress(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeerInterface_GetSystemAddressFromGuid(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeerInterface_GetClientPublicKeyFromSystemAddress(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, string jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_SetTimeoutTime(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakPeerInterface_GetTimeoutTime(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakPeerInterface_GetMTUSize(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakPeerInterface_GetNumberOfAddresses(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_RakPeerInterface_GetLocalIP(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeerInterface_IsLocalIP(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_AllowConnectionResponseIPMigration(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeerInterface_AdvertiseSystem__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, int jarg5, uint jarg6);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeerInterface_AdvertiseSystem__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, int jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_SetSplitMessageProgressInterval(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakPeerInterface_GetSplitMessageProgressInterval(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_SetUnreliableTimeout(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_SendTTL__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ushort jarg3, int jarg4, uint jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_SendTTL__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ushort jarg3, int jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_AttachPlugin(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_DetachPlugin(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_PushBackPacket(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, bool jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_ChangeSystemAddress(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeerInterface_AllocatePacket(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_GetSockets(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_WriteOutOfBandHeader(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_ApplyNetworkSimulator(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2, ushort jarg3, ushort jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_SetPerConnectionOutgoingBandwidthLimit(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeerInterface_IsNetworkSimulatorActive(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeerInterface_GetStatistics__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeerInterface_GetStatistics__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeerInterface_GetStatistics__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakPeerInterface_GetReceiveBufferSize(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeerInterface_RunUpdateCycle(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeerInterface_SendOutOfBand__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, uint jarg5, uint jarg6);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeerInterface_SendOutOfBand__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, uint jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakPeerInterface_Send__SWIG_4(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, int jarg3, int jarg4, int jarg5, char jarg6, global::System.Runtime.InteropServices.HandleRef jarg7, bool jarg8);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_SendLoopback__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_SetOfflinePingResponse__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeerInterface_AdvertiseSystem__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ushort jarg3, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg4, int jarg5, uint jarg6);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeerInterface_AdvertiseSystem__SWIG_3(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ushort jarg3, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg4, int jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_RakPeerInterface_CSharpGetIncomingPasswordHelper(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ref int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_SetIncomingPassword__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_GetIncomingPassword(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, ref int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeerInterface_CSharpGetOfflinePingResponseHelper(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, out uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeerInterface_GetConnectionList(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, ref ushort jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RemoteSystemIndex_index_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RemoteSystemIndex_index_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RemoteSystemIndex_next_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RemoteSystemIndex_next_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RemoteSystemIndex();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_RemoteSystemIndex(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakPeer();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_RakPeer(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakPeer_Startup__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, uint jarg4, int jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakPeer_Startup__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeer_InitializeSecurity__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3, bool jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeer_InitializeSecurity__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_DisableSecurity(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_AddToSecurityExceptionList(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_RemoveFromSecurityExceptionList(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeer_IsInSecurityExceptionList(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_SetMaximumIncomingConnections(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakPeer_GetMaximumIncomingConnections(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ushort CSharp_RakNet_RakPeer_NumberOfConnections(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_SetIncomingPassword__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakPeer_Connect__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, int jarg5, global::System.Runtime.InteropServices.HandleRef jarg6, uint jarg7, uint jarg8, uint jarg9, uint jarg10);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakPeer_Connect__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, int jarg5, global::System.Runtime.InteropServices.HandleRef jarg6, uint jarg7, uint jarg8, uint jarg9);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakPeer_Connect__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, int jarg5, global::System.Runtime.InteropServices.HandleRef jarg6, uint jarg7, uint jarg8);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakPeer_Connect__SWIG_3(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, int jarg5, global::System.Runtime.InteropServices.HandleRef jarg6, uint jarg7);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakPeer_Connect__SWIG_4(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, int jarg5, global::System.Runtime.InteropServices.HandleRef jarg6);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakPeer_Connect__SWIG_5(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, int jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_Shutdown__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, byte jarg3, int jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_Shutdown__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, byte jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_Shutdown__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeer_IsActive(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakPeer_GetNextSendReceipt(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakPeer_IncrementNextSendReceipt(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakPeer_Send__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3, int jarg4, int jarg5, char jarg6, global::System.Runtime.InteropServices.HandleRef jarg7, bool jarg8, uint jarg9);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakPeer_Send__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3, int jarg4, int jarg5, char jarg6, global::System.Runtime.InteropServices.HandleRef jarg7, bool jarg8);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_SendLoopback__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakPeer_Send__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3, int jarg4, char jarg5, global::System.Runtime.InteropServices.HandleRef jarg6, bool jarg7, uint jarg8);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakPeer_Send__SWIG_3(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3, int jarg4, char jarg5, global::System.Runtime.InteropServices.HandleRef jarg6, bool jarg7);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeer_Receive(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_DeallocatePacket(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakPeer_GetMaximumNumberOfPeers(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_CloseConnection__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, bool jarg3, byte jarg4, int jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_CloseConnection__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, bool jarg3, byte jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_CloseConnection__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, bool jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_CancelConnectionAttempt(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakPeer_GetConnectionState(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakPeer_GetIndexFromSystemAddress(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeer_GetSystemAddressFromIndex(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeer_GetGUIDFromIndex(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_GetSystemList(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_AddToBanList__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_AddToBanList__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_RemoveFromBanList(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_ClearBanList(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeer_IsBanned(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_SetLimitIPConnectionFrequency(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_Ping__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeer_Ping__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ushort jarg3, bool jarg4, uint jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeer_Ping__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ushort jarg3, bool jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakPeer_GetAveragePing(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakPeer_GetLastPing(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakPeer_GetLowestPing(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_SetOccasionalPing(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ulong CSharp_RakNet_RakPeer_GetClockDifferential(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_SetOfflinePingResponse__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeer_GetInternalID__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeer_GetInternalID__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeer_GetInternalID__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_SetInternalID__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_SetInternalID__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeer_GetExternalID(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeer_GetMyGUID(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeer_GetMyBoundAddress__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeer_GetMyBoundAddress__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeer_GetGuidFromSystemAddress(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeer_GetSystemAddressFromGuid(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeer_GetClientPublicKeyFromSystemAddress(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, string jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_SetTimeoutTime(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakPeer_GetTimeoutTime(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakPeer_GetMTUSize(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakPeer_GetNumberOfAddresses(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_RakPeer_GetLocalIP(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeer_IsLocalIP(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_AllowConnectionResponseIPMigration(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeer_AdvertiseSystem__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, int jarg5, uint jarg6);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeer_AdvertiseSystem__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, int jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_SetSplitMessageProgressInterval(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakPeer_GetSplitMessageProgressInterval(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_SetUnreliableTimeout(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_SendTTL__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ushort jarg3, int jarg4, uint jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_SendTTL__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ushort jarg3, int jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_AttachPlugin(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_DetachPlugin(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_PushBackPacket(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, bool jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_ChangeSystemAddress(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeer_AllocatePacket(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_GetSockets(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_WriteOutOfBandHeader(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_ApplyNetworkSimulator(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2, ushort jarg3, ushort jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_SetPerConnectionOutgoingBandwidthLimit(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeer_IsNetworkSimulatorActive(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeer_GetStatistics__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeer_GetStatistics__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeer_GetStatistics__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakPeer_GetReceiveBufferSize(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeer_RunUpdateCycle(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeer_SendOutOfBand__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, uint jarg5, uint jarg6);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeer_SendOutOfBand__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, uint jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_PingAndClockDifferential_pingTime_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ushort CSharp_RakNet_RakPeer_PingAndClockDifferential_pingTime_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_PingAndClockDifferential_clockDifferential_set(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ulong CSharp_RakNet_RakPeer_PingAndClockDifferential_clockDifferential_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakPeer_PingAndClockDifferential();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_RakPeer_PingAndClockDifferential(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_RemoteSystemStruct_isActive_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeer_RemoteSystemStruct_isActive_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_RemoteSystemStruct_systemAddress_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeer_RemoteSystemStruct_systemAddress_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_RemoteSystemStruct_myExternalSystemAddress_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeer_RemoteSystemStruct_myExternalSystemAddress_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_RemoteSystemStruct_theirInternalSystemAddress_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeer_RemoteSystemStruct_theirInternalSystemAddress_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_RemoteSystemStruct_reliabilityLayer_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeer_RemoteSystemStruct_reliabilityLayer_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_RemoteSystemStruct_weInitiatedTheConnection_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeer_RemoteSystemStruct_weInitiatedTheConnection_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_RemoteSystemStruct_pingAndClockDifferential_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeer_RemoteSystemStruct_pingAndClockDifferential_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_RemoteSystemStruct_pingAndClockDifferentialWriteIndex_set(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ulong CSharp_RakNet_RakPeer_RemoteSystemStruct_pingAndClockDifferentialWriteIndex_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_RemoteSystemStruct_lowestPing_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ushort CSharp_RakNet_RakPeer_RemoteSystemStruct_lowestPing_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_RemoteSystemStruct_nextPingTime_set(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ulong CSharp_RakNet_RakPeer_RemoteSystemStruct_nextPingTime_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_RemoteSystemStruct_lastReliableSend_set(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ulong CSharp_RakNet_RakPeer_RemoteSystemStruct_lastReliableSend_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_RemoteSystemStruct_connectionTime_set(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ulong CSharp_RakNet_RakPeer_RemoteSystemStruct_connectionTime_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_RemoteSystemStruct_guid_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeer_RemoteSystemStruct_guid_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_RemoteSystemStruct_MTUSize_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakPeer_RemoteSystemStruct_MTUSize_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_RemoteSystemStruct_rakNetSocket_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeer_RemoteSystemStruct_rakNetSocket_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_RemoteSystemStruct_remoteSystemIndex_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ushort CSharp_RakNet_RakPeer_RemoteSystemStruct_remoteSystemIndex_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_RemoteSystemStruct_connectMode_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakPeer_RemoteSystemStruct_connectMode_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakPeer_RemoteSystemStruct();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_RakPeer_RemoteSystemStruct(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakPeer_Send__SWIG_4(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, int jarg3, int jarg4, int jarg5, char jarg6, global::System.Runtime.InteropServices.HandleRef jarg7, bool jarg8);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_SendLoopback__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_SetOfflinePingResponse__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeer_AdvertiseSystem__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ushort jarg3, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg4, int jarg5, uint jarg6);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeer_AdvertiseSystem__SWIG_3(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ushort jarg3, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg4, int jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_RakPeer_CSharpGetIncomingPasswordHelper(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ref int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_SetIncomingPassword__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_GetIncomingPassword(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, ref int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakPeer_CSharpGetOfflinePingResponseHelper(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, out uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakPeer_GetConnectionList(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, ref ushort jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_PacketLogger_GetInstance();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_PacketLogger_DestroyInstance(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_PacketLogger();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_PacketLogger(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_PacketLogger_OnReliabilityLayerNotification(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, uint jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, bool jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_PacketLogger_LogHeader(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_PacketLogger_WriteLog(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_PacketLogger_WriteMiscellaneous(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_PacketLogger_SetPrintID(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_PacketLogger_SetPrintAcks(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_PacketLogger_SetPrefix(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_PacketLogger_SetSuffix(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_PacketLogger_BaseIDTOString(byte jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_PacketLogger_SetLogDirectMessages(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_PacketLogger_FormatLineHelper__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3, string jarg4, uint jarg5, uint jarg6, byte jarg7, uint jarg8, ulong jarg9, global::System.Runtime.InteropServices.HandleRef jarg10, global::System.Runtime.InteropServices.HandleRef jarg11, uint jarg12, uint jarg13, uint jarg14, uint jarg15);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_PacketLogger_FormatLineHelper__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3, string jarg4, uint jarg5, uint jarg6, string jarg7, uint jarg8, ulong jarg9, global::System.Runtime.InteropServices.HandleRef jarg10, global::System.Runtime.InteropServices.HandleRef jarg11, uint jarg12, uint jarg13, uint jarg14, uint jarg15);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_PacketFileLogger();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_PacketFileLogger(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_PacketFileLogger_StartLog(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_PacketFileLogger_WriteLog(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_NatTypeDetectionClient_GetInstance();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatTypeDetectionClient_DestroyInstance(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_NatTypeDetectionClient();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_NatTypeDetectionClient(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatTypeDetectionClient_DetectNATType(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatTypeDetectionClient_OnRNS2Recv(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatTypeDetectionClient_DeallocRNS2RecvStruct(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_NatTypeDetectionClient_AllocRNS2RecvStruct(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_PunchthroughConfiguration();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_PunchthroughConfiguration_TIME_BETWEEN_PUNCH_ATTEMPTS_INTERNAL_set(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ulong CSharp_RakNet_PunchthroughConfiguration_TIME_BETWEEN_PUNCH_ATTEMPTS_INTERNAL_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_PunchthroughConfiguration_TIME_BETWEEN_PUNCH_ATTEMPTS_EXTERNAL_set(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ulong CSharp_RakNet_PunchthroughConfiguration_TIME_BETWEEN_PUNCH_ATTEMPTS_EXTERNAL_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_PunchthroughConfiguration_UDP_SENDS_PER_PORT_INTERNAL_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_PunchthroughConfiguration_UDP_SENDS_PER_PORT_INTERNAL_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_PunchthroughConfiguration_UDP_SENDS_PER_PORT_EXTERNAL_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_PunchthroughConfiguration_UDP_SENDS_PER_PORT_EXTERNAL_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_PunchthroughConfiguration_INTERNAL_IP_WAIT_AFTER_ATTEMPTS_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_PunchthroughConfiguration_INTERNAL_IP_WAIT_AFTER_ATTEMPTS_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_PunchthroughConfiguration_MAX_PREDICTIVE_PORT_RANGE_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_PunchthroughConfiguration_MAX_PREDICTIVE_PORT_RANGE_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_PunchthroughConfiguration_EXTERNAL_IP_WAIT_AFTER_FIRST_TTL_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_PunchthroughConfiguration_EXTERNAL_IP_WAIT_AFTER_FIRST_TTL_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_PunchthroughConfiguration_EXTERNAL_IP_WAIT_BETWEEN_PORTS_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_PunchthroughConfiguration_EXTERNAL_IP_WAIT_BETWEEN_PORTS_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_PunchthroughConfiguration_EXTERNAL_IP_WAIT_AFTER_ALL_ATTEMPTS_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_PunchthroughConfiguration_EXTERNAL_IP_WAIT_AFTER_ALL_ATTEMPTS_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_PunchthroughConfiguration_MAXIMUM_NUMBER_OF_INTERNAL_IDS_TO_CHECK_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_PunchthroughConfiguration_MAXIMUM_NUMBER_OF_INTERNAL_IDS_TO_CHECK_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_PunchthroughConfiguration_retryOnFailure_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_PunchthroughConfiguration_retryOnFailure_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_PunchthroughConfiguration(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_NatPunchthroughDebugInterface();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_NatPunchthroughDebugInterface(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughDebugInterface_OnClientMessage(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughDebugInterface_director_connect(global::System.Runtime.InteropServices.HandleRef jarg1, NatPunchthroughDebugInterface.SwigDelegateNatPunchthroughDebugInterface_0 delegate0);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughDebugInterface_Printf_OnClientMessage(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_NatPunchthroughDebugInterface_Printf();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_NatPunchthroughDebugInterface_Printf(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughDebugInterface_PacketLogger_pl_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_NatPunchthroughDebugInterface_PacketLogger_pl_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_NatPunchthroughDebugInterface_PacketLogger();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_NatPunchthroughDebugInterface_PacketLogger(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughDebugInterface_PacketLogger_OnClientMessage(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_NatPunchthroughClient_GetInstance();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughClient_DestroyInstance(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_NatPunchthroughClient();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_NatPunchthroughClient(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughClient_FindRouterPortStride(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_NatPunchthroughClient_OpenNAT(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_NatPunchthroughClient_GetPunchthroughConfiguration(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughClient_SetDebugInterface(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughClient_GetUPNPPortMappings(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughClient_Clear(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughClient_SendPing_nextActionTime_set(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ulong CSharp_RakNet_NatPunchthroughClient_SendPing_nextActionTime_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughClient_SendPing_targetAddress_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_NatPunchthroughClient_SendPing_targetAddress_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughClient_SendPing_facilitator_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_NatPunchthroughClient_SendPing_facilitator_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughClient_SendPing_internalIds_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_NatPunchthroughClient_SendPing_internalIds_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughClient_SendPing_targetGuid_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_NatPunchthroughClient_SendPing_targetGuid_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughClient_SendPing_weAreSender_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_NatPunchthroughClient_SendPing_weAreSender_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughClient_SendPing_attemptCount_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_NatPunchthroughClient_SendPing_attemptCount_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughClient_SendPing_retryCount_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_NatPunchthroughClient_SendPing_retryCount_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughClient_SendPing_punchingFixedPortAttempts_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_NatPunchthroughClient_SendPing_punchingFixedPortAttempts_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughClient_SendPing_sessionId_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ushort CSharp_RakNet_NatPunchthroughClient_SendPing_sessionId_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughClient_SendPing_sentTTL_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_NatPunchthroughClient_SendPing_sentTTL_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughClient_SendPing_testMode_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_NatPunchthroughClient_SendPing_testMode_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_NatPunchthroughClient_SendPing();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_NatPunchthroughClient_SendPing(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughClient_sp_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_NatPunchthroughClient_sp_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_Router2DebugInterface();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_Router2DebugInterface(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Router2DebugInterface_ShowFailure(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Router2DebugInterface_ShowDiagnostic(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_Router2_GetInstance();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Router2_DestroyInstance(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_Router2();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_Router2(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Router2_SetSocketFamily(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Router2_EstablishRouting(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Router2_SetMaximumForwardingRequests(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Router2_SetDebugInterface(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_Router2_GetDebugInterface(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Router2_ConnectionRequestSystem_guid_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_Router2_ConnectionRequestSystem_guid_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Router2_ConnectionRequestSystem_pingToEndpoint_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_Router2_ConnectionRequestSystem_pingToEndpoint_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Router2_ConnectionRequestSystem_usedForwardingEntries_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ushort CSharp_RakNet_Router2_ConnectionRequestSystem_usedForwardingEntries_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_Router2_ConnectionRequestSystem();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_Router2_ConnectionRequestSystem(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_Router2_ConnnectRequest();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_Router2_ConnnectRequest(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Router2_ConnnectRequest_connectionRequestSystems_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_Router2_ConnnectRequest_connectionRequestSystems_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Router2_ConnnectRequest_connectionRequestSystemsMutex_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_Router2_ConnnectRequest_connectionRequestSystemsMutex_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Router2_ConnnectRequest_requestState_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_Router2_ConnnectRequest_requestState_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Router2_ConnnectRequest_pingTimeout_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_Router2_ConnnectRequest_pingTimeout_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Router2_ConnnectRequest_endpointGuid_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_Router2_ConnnectRequest_endpointGuid_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Router2_ConnnectRequest_lastRequestedForwardingSystem_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_Router2_ConnnectRequest_lastRequestedForwardingSystem_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Router2_ConnnectRequest_returnConnectionLostOnFailure_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_Router2_ConnnectRequest_returnConnectionLostOnFailure_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_Router2_ConnnectRequest_GetGuidIndex(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_Router2_GetConnectionRequestIndex(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Router2_MiniPunchRequest_endpointGuid_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_Router2_MiniPunchRequest_endpointGuid_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Router2_MiniPunchRequest_endpointAddress_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_Router2_MiniPunchRequest_endpointAddress_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Router2_MiniPunchRequest_gotReplyFromEndpoint_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_Router2_MiniPunchRequest_gotReplyFromEndpoint_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Router2_MiniPunchRequest_sourceGuid_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_Router2_MiniPunchRequest_sourceGuid_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Router2_MiniPunchRequest_sourceAddress_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_Router2_MiniPunchRequest_sourceAddress_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Router2_MiniPunchRequest_gotReplyFromSource_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_Router2_MiniPunchRequest_gotReplyFromSource_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Router2_MiniPunchRequest_timeout_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_Router2_MiniPunchRequest_timeout_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Router2_MiniPunchRequest_nextAction_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_Router2_MiniPunchRequest_nextAction_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Router2_MiniPunchRequest_forwardingPort_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ushort CSharp_RakNet_Router2_MiniPunchRequest_forwardingPort_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Router2_MiniPunchRequest_forwardingSocket_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_Router2_MiniPunchRequest_forwardingSocket_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_Router2_MiniPunchRequest();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_Router2_MiniPunchRequest(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Router2_ForwardedConnection_endpointGuid_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_Router2_ForwardedConnection_endpointGuid_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Router2_ForwardedConnection_intermediaryGuid_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_Router2_ForwardedConnection_intermediaryGuid_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Router2_ForwardedConnection_intermediaryAddress_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_Router2_ForwardedConnection_intermediaryAddress_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Router2_ForwardedConnection_returnConnectionLostOnFailure_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_Router2_ForwardedConnection_returnConnectionLostOnFailure_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Router2_ForwardedConnection_weInitiatedForwarding_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_Router2_ForwardedConnection_weInitiatedForwarding_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_Router2_ForwardedConnection();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_Router2_ForwardedConnection(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_UDPProxyClientResultHandler();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_UDPProxyClientResultHandler(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyClientResultHandler_OnForwardingSuccess(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ushort jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5, global::System.Runtime.InteropServices.HandleRef jarg6, global::System.Runtime.InteropServices.HandleRef jarg7, global::System.Runtime.InteropServices.HandleRef jarg8);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyClientResultHandler_OnForwardingNotification(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ushort jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5, global::System.Runtime.InteropServices.HandleRef jarg6, global::System.Runtime.InteropServices.HandleRef jarg7, global::System.Runtime.InteropServices.HandleRef jarg8);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyClientResultHandler_OnNoServersOnline(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5, global::System.Runtime.InteropServices.HandleRef jarg6);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyClientResultHandler_OnRecipientNotConnected(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5, global::System.Runtime.InteropServices.HandleRef jarg6);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyClientResultHandler_OnAllServersBusy(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5, global::System.Runtime.InteropServices.HandleRef jarg6);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyClientResultHandler_OnForwardingInProgress(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ushort jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5, global::System.Runtime.InteropServices.HandleRef jarg6, global::System.Runtime.InteropServices.HandleRef jarg7, global::System.Runtime.InteropServices.HandleRef jarg8);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyClientResultHandler_director_connect(global::System.Runtime.InteropServices.HandleRef jarg1, UDPProxyClientResultHandler.SwigDelegateUDPProxyClientResultHandler_0 delegate0, UDPProxyClientResultHandler.SwigDelegateUDPProxyClientResultHandler_1 delegate1, UDPProxyClientResultHandler.SwigDelegateUDPProxyClientResultHandler_2 delegate2, UDPProxyClientResultHandler.SwigDelegateUDPProxyClientResultHandler_3 delegate3, UDPProxyClientResultHandler.SwigDelegateUDPProxyClientResultHandler_4 delegate4, UDPProxyClientResultHandler.SwigDelegateUDPProxyClientResultHandler_5 delegate5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_UDPProxyClient_GetInstance();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyClient_DestroyInstance(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_UDPProxyClient();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_UDPProxyClient(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyClient_SetResultHandler(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_UDPProxyClient_RequestForwarding__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, uint jarg5, global::System.Runtime.InteropServices.HandleRef jarg6);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_UDPProxyClient_RequestForwarding__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, uint jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_UDPProxyClient_RequestForwarding__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, uint jarg5, global::System.Runtime.InteropServices.HandleRef jarg6);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_UDPProxyClient_RequestForwarding__SWIG_3(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, uint jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyClient_ServerWithPing_ping_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ushort CSharp_RakNet_UDPProxyClient_ServerWithPing_ping_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyClient_ServerWithPing_serverAddress_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_UDPProxyClient_ServerWithPing_serverAddress_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_UDPProxyClient_ServerWithPing();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_UDPProxyClient_ServerWithPing(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyClient_SenderAndTargetAddress_senderClientAddress_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_UDPProxyClient_SenderAndTargetAddress_senderClientAddress_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyClient_SenderAndTargetAddress_targetClientAddress_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_UDPProxyClient_SenderAndTargetAddress_targetClientAddress_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_UDPProxyClient_SenderAndTargetAddress();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_UDPProxyClient_SenderAndTargetAddress(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyClient_PingServerGroup_sata_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_UDPProxyClient_PingServerGroup_sata_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyClient_PingServerGroup_startPingTime_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_UDPProxyClient_PingServerGroup_startPingTime_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyClient_PingServerGroup_coordinatorAddressForPings_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_UDPProxyClient_PingServerGroup_coordinatorAddressForPings_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyClient_PingServerGroup_serversToPing_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_UDPProxyClient_PingServerGroup_serversToPing_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_UDPProxyClient_PingServerGroup_AreAllServersPinged(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyClient_PingServerGroup_SendPingedServersToCoordinator(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_UDPProxyClient_PingServerGroup();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_UDPProxyClient_PingServerGroup(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_FullyConnectedMesh2_GetInstance();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FullyConnectedMesh2_DestroyInstance(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_FullyConnectedMesh2();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_FullyConnectedMesh2(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FullyConnectedMesh2_SetConnectOnNewRemoteConnection(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_FullyConnectedMesh2_GetConnectedHost(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_FullyConnectedMesh2_GetConnectedHostAddr(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_FullyConnectedMesh2_GetHostSystem(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_FullyConnectedMesh2_IsHostSystem(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FullyConnectedMesh2_GetHostOrder(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_FullyConnectedMesh2_IsConnectedHost(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FullyConnectedMesh2_SetAutoparticipateConnections(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FullyConnectedMesh2_ResetHostCalculation(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FullyConnectedMesh2_AddParticipant(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FullyConnectedMesh2_GetParticipantList(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_FullyConnectedMesh2_HasParticipant(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FullyConnectedMesh2_ConnectToRemoteNewIncomingConnections(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FullyConnectedMesh2_Clear(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_FullyConnectedMesh2_GetParticipantCount__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FullyConnectedMesh2_GetParticipantCount__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FullyConnectedMesh2_StartVerifiedJoin(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FullyConnectedMesh2_RespondOnVerifiedJoinCapable(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, bool jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FullyConnectedMesh2_GetVerifiedJoinRequiredProcessingList(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FullyConnectedMesh2_GetVerifiedJoinAcceptedAdditionalData(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FullyConnectedMesh2_GetVerifiedJoinRejectedAdditionalData(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FullyConnectedMesh2_WriteVJCUserData(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FullyConnectedMesh2_SkipToVJCUserData(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FullyConnectedMesh2_WriteVJSUserData(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_FullyConnectedMesh2_FCM2Participant__SWIG_0();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_FullyConnectedMesh2_FCM2Participant__SWIG_1(long jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FullyConnectedMesh2_FCM2Participant_fcm2Guid_set(global::System.Runtime.InteropServices.HandleRef jarg1, long jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern long CSharp_RakNet_FullyConnectedMesh2_FCM2Participant_fcm2Guid_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FullyConnectedMesh2_FCM2Participant_rakNetGuid_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_FullyConnectedMesh2_FCM2Participant_rakNetGuid_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_FullyConnectedMesh2_FCM2Participant(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FullyConnectedMesh2_VerifiedJoinInProgressMember_systemAddress_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_FullyConnectedMesh2_VerifiedJoinInProgressMember_systemAddress_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FullyConnectedMesh2_VerifiedJoinInProgressMember_guid_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_FullyConnectedMesh2_VerifiedJoinInProgressMember_guid_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FullyConnectedMesh2_VerifiedJoinInProgressMember_joinInProgressState_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_FullyConnectedMesh2_VerifiedJoinInProgressMember_joinInProgressState_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FullyConnectedMesh2_VerifiedJoinInProgressMember_userData_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_FullyConnectedMesh2_VerifiedJoinInProgressMember_userData_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FullyConnectedMesh2_VerifiedJoinInProgressMember_workingFlag_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_FullyConnectedMesh2_VerifiedJoinInProgressMember_workingFlag_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_FullyConnectedMesh2_VerifiedJoinInProgressMember();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_FullyConnectedMesh2_VerifiedJoinInProgressMember(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FullyConnectedMesh2_VerifiedJoinInProgress_requester_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_FullyConnectedMesh2_VerifiedJoinInProgress_requester_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FullyConnectedMesh2_VerifiedJoinInProgress_vjipMembers_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_FullyConnectedMesh2_VerifiedJoinInProgress_vjipMembers_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_FullyConnectedMesh2_VerifiedJoinInProgress();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_FullyConnectedMesh2_VerifiedJoinInProgress(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_FullyConnectedMesh2_GetTotalConnectionCount(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_ReadyEvent_GetInstance();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_ReadyEvent_DestroyInstance(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_ReadyEvent();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_ReadyEvent(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_ReadyEvent_SetEvent(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, bool jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_ReadyEvent_ForceCompletion(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_ReadyEvent_DeleteEvent(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_ReadyEvent_IsEventSet(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_ReadyEvent_IsEventCompletionProcessing(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_ReadyEvent_IsEventCompleted(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_ReadyEvent_HasEvent(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_ReadyEvent_GetEventListSize(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_ReadyEvent_GetEventAtIndex(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_ReadyEvent_AddToWaitList(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_ReadyEvent_RemoveFromWaitList(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_ReadyEvent_IsInWaitList(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_ReadyEvent_GetRemoteWaitListSize(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_ReadyEvent_GetFromWaitListAtIndex(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_ReadyEvent_GetReadyStatus(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_ReadyEvent_SetSendChannel(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_ReadyEvent_RemoteSystemCompByGuid(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_ALLOW_JOIN_ANY_AVAILABLE_TEAM_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_ALLOW_JOIN_SPECIFIC_TEAM_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_ALLOW_JOIN_REBALANCING_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_TeamSelection__SWIG_0();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_TeamSelection__SWIG_1(int jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_TeamSelection__SWIG_2(int jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_TeamSelection__SWIG_3(int jarg1, byte jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TeamSelection_joinTeamType_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_TeamSelection_joinTeamType_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_TeamSelection_AnyAvailable();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_TeamSelection_SpecificTeam(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_TeamSelection_NoTeam(byte jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_TeamSelection(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_TM_TeamMember_GetInstance();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TM_TeamMember_DestroyInstance(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_TM_TeamMember();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_TM_TeamMember(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_TM_TeamMember_RequestTeam(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_TM_TeamMember_RequestTeamSwitch(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_TM_TeamMember_GetRequestedTeam(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TM_TeamMember_GetRequestedSpecificTeams(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_TM_TeamMember_HasRequestedTeam(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_TM_TeamMember_GetRequestedTeamIndex(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_TM_TeamMember_GetRequestedTeamCount(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_TM_TeamMember_CancelTeamRequest(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_TM_TeamMember_LeaveTeam(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, byte jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_TM_TeamMember_LeaveAllTeams(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_TM_TeamMember_GetCurrentTeam(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_TM_TeamMember_GetCurrentTeamCount(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_TM_TeamMember_GetCurrentTeamByIndex(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TM_TeamMember_GetCurrentTeams(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TM_TeamMember_GetLastTeams(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_TM_TeamMember_IsOnTeam(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ulong CSharp_RakNet_TM_TeamMember_GetNetworkID(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_TM_TeamMember_GetTM_World(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TM_TeamMember_SerializeConstruction(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_TM_TeamMember_DeserializeConstruction(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TM_TeamMember_SetOwner(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_TM_TeamMember_GetOwner(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern byte CSharp_RakNet_TM_TeamMember_GetNoTeamId(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_TM_TeamMember_GetWorldIndex(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_TM_TeamMember_ToUint32(ulong jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TM_TeamMember_RequestedTeam_whenRequested_set(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ulong CSharp_RakNet_TM_TeamMember_RequestedTeam_whenRequested_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TM_TeamMember_RequestedTeam_requestIndex_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_TM_TeamMember_RequestedTeam_requestIndex_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TM_TeamMember_RequestedTeam_requested_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_TM_TeamMember_RequestedTeam_requested_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TM_TeamMember_RequestedTeam_isTeamSwitch_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_TM_TeamMember_RequestedTeam_isTeamSwitch_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TM_TeamMember_RequestedTeam_teamToLeave_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_TM_TeamMember_RequestedTeam_teamToLeave_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_TM_TeamMember_RequestedTeam();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_TM_TeamMember_RequestedTeam(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_TM_Team_GetInstance();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TM_Team_DestroyInstance(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_TM_Team();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_TM_Team(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_TM_Team_SetMemberLimit(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2, byte jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ushort CSharp_RakNet_TM_Team_GetMemberLimit(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ushort CSharp_RakNet_TM_Team_GetMemberLimitSetting(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_TM_Team_SetJoinPermissions(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern byte CSharp_RakNet_TM_Team_GetJoinPermissions(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TM_Team_LeaveTeam(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, byte jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_TM_Team_GetBalancingApplies(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TM_Team_GetTeamMembers(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_TM_Team_GetTeamMembersCount(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_TM_Team_GetTeamMemberByIndex(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ulong CSharp_RakNet_TM_Team_GetNetworkID(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_TM_Team_GetTM_World(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TM_Team_SerializeConstruction(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_TM_Team_DeserializeConstruction(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TM_Team_SetOwner(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_TM_Team_GetOwner(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_TM_Team_GetWorldIndex(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_TM_Team_ToUint32(ulong jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_TM_World();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_TM_World(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_TM_World_GetTeamManager(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TM_World_AddParticipant(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TM_World_RemoveParticipant(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TM_World_SetAutoManageConnections(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TM_World_GetParticipantList(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TM_World_ReferenceTeam(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, ulong jarg3, bool jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TM_World_DereferenceTeam(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, byte jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_TM_World_GetTeamCount(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_TM_World_GetTeamByIndex(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_TM_World_GetTeamByNetworkID(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_TM_World_GetTeamIndex(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TM_World_ReferenceTeamMember(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, ulong jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TM_World_DereferenceTeamMember(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_TM_World_GetTeamMemberCount(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_TM_World_GetTeamMemberByIndex(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ulong CSharp_RakNet_TM_World_GetTeamMemberIDByIndex(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_TM_World_GetTeamMemberByNetworkID(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_TM_World_GetTeamMemberIndex(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_TM_World_SetBalanceTeams(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, byte jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_TM_World_GetBalanceTeams(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TM_World_SetHost(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_TM_World_GetHost(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern byte CSharp_RakNet_TM_World_GetWorldId(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TM_World_Clear(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TM_World_JoinRequestHelper_whenRequestMade_set(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ulong CSharp_RakNet_TM_World_JoinRequestHelper_whenRequestMade_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TM_World_JoinRequestHelper_teamMemberIndex_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_TM_World_JoinRequestHelper_teamMemberIndex_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TM_World_JoinRequestHelper_indexIntoTeamsRequested_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_TM_World_JoinRequestHelper_indexIntoTeamsRequested_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TM_World_JoinRequestHelper_requestIndex_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_TM_World_JoinRequestHelper_requestIndex_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_TM_World_JoinRequestHelper();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_TM_World_JoinRequestHelper(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_TM_World_JoinRequestHelperComp(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_TeamManager_GetInstance();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TeamManager_DestroyInstance(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_TeamManager();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_TeamManager(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_TeamManager_AddWorld(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TeamManager_RemoveWorld(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_TeamManager_GetWorldCount(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_TeamManager_GetWorldAtIndex(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_TeamManager_GetWorldWithId(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TeamManager_SetAutoManageConnections(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TeamManager_SetTopology(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TeamManager_DecomposeTeamFull(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5, global::System.Runtime.InteropServices.HandleRef jarg6, global::System.Runtime.InteropServices.HandleRef jarg7, global::System.Runtime.InteropServices.HandleRef jarg8, global::System.Runtime.InteropServices.HandleRef jarg9);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TeamManager_DecomposeTeamLocked(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5, global::System.Runtime.InteropServices.HandleRef jarg6, global::System.Runtime.InteropServices.HandleRef jarg7, global::System.Runtime.InteropServices.HandleRef jarg8, global::System.Runtime.InteropServices.HandleRef jarg9);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TeamManager_Clear(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TeamManager_DecodeTeamAssigned(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TeamManager_DecodeTeamCancelled(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_NatPunchthroughServerDebugInterface(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughServerDebugInterface_OnServerMessage(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughServerDebugInterface_Printf_OnServerMessage(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_NatPunchthroughServerDebugInterface_Printf();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_NatPunchthroughServerDebugInterface_Printf(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughServerDebugInterface_PacketLogger_pl_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_NatPunchthroughServerDebugInterface_PacketLogger_pl_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_NatPunchthroughServerDebugInterface_PacketLogger();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_NatPunchthroughServerDebugInterface_PacketLogger(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughServerDebugInterface_PacketLogger_OnServerMessage(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_NatPunchthroughServer_GetInstance();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughServer_DestroyInstance(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_NatPunchthroughServer();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_NatPunchthroughServer(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughServer_SetDebugInterface(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_NatPunchthroughServer_ConnectionAttempt();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughServer_ConnectionAttempt_sender_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_NatPunchthroughServer_ConnectionAttempt_sender_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughServer_ConnectionAttempt_recipient_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_NatPunchthroughServer_ConnectionAttempt_recipient_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughServer_ConnectionAttempt_sessionId_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ushort CSharp_RakNet_NatPunchthroughServer_ConnectionAttempt_sessionId_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughServer_ConnectionAttempt_startTime_set(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ulong CSharp_RakNet_NatPunchthroughServer_ConnectionAttempt_startTime_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_NatPunchthroughServer_ConnectionAttempt_NAT_ATTEMPT_PHASE_NOT_STARTED_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_NatPunchthroughServer_ConnectionAttempt_NAT_ATTEMPT_PHASE_GETTING_RECENT_PORTS_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughServer_ConnectionAttempt_attemptPhase_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_NatPunchthroughServer_ConnectionAttempt_attemptPhase_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_NatPunchthroughServer_ConnectionAttempt(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughServer_User_guid_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_NatPunchthroughServer_User_guid_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughServer_User_systemAddress_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_NatPunchthroughServer_User_systemAddress_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughServer_User_mostRecentPort_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ushort CSharp_RakNet_NatPunchthroughServer_User_mostRecentPort_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughServer_User_isReady_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_NatPunchthroughServer_User_isReady_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughServer_User_groupPunchthroughRequests_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_NatPunchthroughServer_User_groupPunchthroughRequests_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughServer_User_connectionAttempts_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_NatPunchthroughServer_User_connectionAttempts_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_NatPunchthroughServer_User_HasConnectionAttemptToUser(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughServer_User_DerefConnectionAttempt(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughServer_User_DeleteConnectionAttempt(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughServer_User_LogConnectionAttempts(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_NatPunchthroughServer_User();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_NatPunchthroughServer_User(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatPunchthroughServer_lastUpdate_set(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ulong CSharp_RakNet_NatPunchthroughServer_lastUpdate_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_UDPForwarder();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_UDPForwarder(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPForwarder_Startup(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPForwarder_Shutdown(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPForwarder_SetMaxForwardEntries(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_UDPForwarder_GetMaxForwardEntries(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_UDPForwarder_GetUsedForwardEntries(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_UDPForwarder_StartForwarding(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, uint jarg4, string jarg5, ushort jarg6, out ushort jarg7, out int jarg8);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPForwarder_StopForwarding(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_UDPForwarder_ForwardEntry();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_UDPForwarder_ForwardEntry(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPForwarder_ForwardEntry_addr1Unconfirmed_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_UDPForwarder_ForwardEntry_addr1Unconfirmed_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPForwarder_ForwardEntry_addr2Unconfirmed_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_UDPForwarder_ForwardEntry_addr2Unconfirmed_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPForwarder_ForwardEntry_addr1Confirmed_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_UDPForwarder_ForwardEntry_addr1Confirmed_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPForwarder_ForwardEntry_addr2Confirmed_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_UDPForwarder_ForwardEntry_addr2Confirmed_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPForwarder_ForwardEntry_timeLastDatagramForwarded_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_UDPForwarder_ForwardEntry_timeLastDatagramForwarded_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPForwarder_ForwardEntry_socket_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_UDPForwarder_ForwardEntry_socket_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPForwarder_ForwardEntry_timeoutOnNoDataMS_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_UDPForwarder_ForwardEntry_timeoutOnNoDataMS_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPForwarder_ForwardEntry_socketFamily_set(global::System.Runtime.InteropServices.HandleRef jarg1, short jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern short CSharp_RakNet_UDPForwarder_ForwardEntry_socketFamily_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_UDPProxyServerResultHandler();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_UDPProxyServerResultHandler(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyServerResultHandler_OnLoginSuccess(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyServerResultHandler_OnAlreadyLoggedIn(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyServerResultHandler_OnNoPasswordSet(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyServerResultHandler_OnWrongPassword(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyServerResultHandler_director_connect(global::System.Runtime.InteropServices.HandleRef jarg1, UDPProxyServerResultHandler.SwigDelegateUDPProxyServerResultHandler_0 delegate0, UDPProxyServerResultHandler.SwigDelegateUDPProxyServerResultHandler_1 delegate1, UDPProxyServerResultHandler.SwigDelegateUDPProxyServerResultHandler_2 delegate2, UDPProxyServerResultHandler.SwigDelegateUDPProxyServerResultHandler_3 delegate3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_UDPProxyServer_GetInstance();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyServer_DestroyInstance(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_UDPProxyServer();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_UDPProxyServer(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyServer_SetSocketFamily(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyServer_SetResultHandler(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_UDPProxyServer_LoginToCoordinator(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyServer_SetServerPublicIP(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyServer_udpForwarder_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_UDPProxyServer_udpForwarder_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_UDPProxyCoordinator_GetInstance();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyCoordinator_DestroyInstance(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_UDPProxyCoordinator();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_UDPProxyCoordinator(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyCoordinator_SetRemoteLoginPassword(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyCoordinator_SenderAndTargetAddress_senderClientAddress_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_UDPProxyCoordinator_SenderAndTargetAddress_senderClientAddress_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyCoordinator_SenderAndTargetAddress_senderClientGuid_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_UDPProxyCoordinator_SenderAndTargetAddress_senderClientGuid_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyCoordinator_SenderAndTargetAddress_targetClientAddress_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_UDPProxyCoordinator_SenderAndTargetAddress_targetClientAddress_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyCoordinator_SenderAndTargetAddress_targetClientGuid_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_UDPProxyCoordinator_SenderAndTargetAddress_targetClientGuid_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_UDPProxyCoordinator_SenderAndTargetAddress();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_UDPProxyCoordinator_SenderAndTargetAddress(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyCoordinator_ServerWithPing_ping_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ushort CSharp_RakNet_UDPProxyCoordinator_ServerWithPing_ping_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyCoordinator_ServerWithPing_serverAddress_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_UDPProxyCoordinator_ServerWithPing_serverAddress_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_UDPProxyCoordinator_ServerWithPing();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_UDPProxyCoordinator_ServerWithPing(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyCoordinator_ForwardingRequest_timeoutOnNoDataMS_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_UDPProxyCoordinator_ForwardingRequest_timeoutOnNoDataMS_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyCoordinator_ForwardingRequest_timeoutAfterSuccess_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_UDPProxyCoordinator_ForwardingRequest_timeoutAfterSuccess_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyCoordinator_ForwardingRequest_sata_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_UDPProxyCoordinator_ForwardingRequest_sata_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyCoordinator_ForwardingRequest_requestingAddress_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_UDPProxyCoordinator_ForwardingRequest_requestingAddress_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyCoordinator_ForwardingRequest_currentlyAttemptedServerAddress_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_UDPProxyCoordinator_ForwardingRequest_currentlyAttemptedServerAddress_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyCoordinator_ForwardingRequest_remainingServersToTry_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_UDPProxyCoordinator_ForwardingRequest_remainingServersToTry_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_UDPProxyCoordinator_ForwardingRequest_serverSelectionBitstream_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyCoordinator_ForwardingRequest_sourceServerPings_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_UDPProxyCoordinator_ForwardingRequest_sourceServerPings_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyCoordinator_ForwardingRequest_targetServerPings_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_UDPProxyCoordinator_ForwardingRequest_targetServerPings_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyCoordinator_ForwardingRequest_timeRequestedPings_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_UDPProxyCoordinator_ForwardingRequest_timeRequestedPings_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UDPProxyCoordinator_ForwardingRequest_OrderRemainingServersToTry(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_UDPProxyCoordinator_ForwardingRequest();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_UDPProxyCoordinator_ForwardingRequest(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_NatTypeDetectionServer_GetInstance();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatTypeDetectionServer_DestroyInstance(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_NatTypeDetectionServer();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_NatTypeDetectionServer(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatTypeDetectionServer_Startup(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3, string jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatTypeDetectionServer_Shutdown(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatTypeDetectionServer_NATDetectionAttempt_systemAddress_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_NatTypeDetectionServer_NATDetectionAttempt_systemAddress_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatTypeDetectionServer_NATDetectionAttempt_detectionState_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_NatTypeDetectionServer_NATDetectionAttempt_detectionState_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatTypeDetectionServer_NATDetectionAttempt_nextStateTime_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_NatTypeDetectionServer_NATDetectionAttempt_nextStateTime_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatTypeDetectionServer_NATDetectionAttempt_timeBetweenAttempts_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_NatTypeDetectionServer_NATDetectionAttempt_timeBetweenAttempts_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatTypeDetectionServer_NATDetectionAttempt_c2Port_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ushort CSharp_RakNet_NatTypeDetectionServer_NATDetectionAttempt_c2Port_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatTypeDetectionServer_NATDetectionAttempt_guid_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_NatTypeDetectionServer_NATDetectionAttempt_guid_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_NatTypeDetectionServer_NATDetectionAttempt();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_NatTypeDetectionServer_NATDetectionAttempt(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatTypeDetectionServer_OnRNS2Recv(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_NatTypeDetectionServer_DeallocRNS2RecvStruct(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_NatTypeDetectionServer_AllocRNS2RecvStruct(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__TABLE_BPLUS_TREE_ORDER_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet__TABLE_MAX_COLUMN_NAME_LENGTH_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_Table_Cell__SWIG_0();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_Table_Cell(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_Table_Cell__SWIG_1(double jarg1, string jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, int jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Table_Cell_SetByType(global::System.Runtime.InteropServices.HandleRef jarg1, double jarg2, string jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, int jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Table_Cell_Clear(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Table_Cell_Set__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Table_Cell_Set__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Table_Cell_Set__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, double jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Table_Cell_Set__SWIG_3(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Table_Cell_Set__SWIG_4(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Table_Cell_SetPtr(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Table_Cell_Get__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, out int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Table_Cell_Get__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, out double jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Table_Cell_Get__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Table_Cell_Get__SWIG_3(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, out int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_Table_Cell_ToString(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_Table_Cell_CopyData(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_Table_Cell__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_Table_Cell_EstimateColumnType(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Table_Cell_isEmpty_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_Table_Cell_isEmpty_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Table_Cell_i_set(global::System.Runtime.InteropServices.HandleRef jarg1, double jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern double CSharp_RakNet_Table_Cell_i_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Table_Cell_c_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_Table_Cell_c_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Table_Cell_ptr_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_Table_Cell_ptr_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_Table_ColumnDescriptor__SWIG_0();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_Table_ColumnDescriptor(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_Table_ColumnDescriptor__SWIG_1(string jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Table_ColumnDescriptor_columnName_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_Table_ColumnDescriptor_columnName_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Table_ColumnDescriptor_columnType_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_Table_ColumnDescriptor_columnType_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Table_Row_cells_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_Table_Row_cells_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Table_Row_UpdateCell__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, double jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Table_Row_UpdateCell__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, string jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Table_Row_UpdateCell__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, int jarg3, string jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_Table_Row();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_Table_Row(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_Table_FilterQuery__SWIG_0();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_Table_FilterQuery(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_Table_FilterQuery__SWIG_1(uint jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Table_FilterQuery_columnName_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_Table_FilterQuery_columnName_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Table_FilterQuery_columnIndex_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_Table_FilterQuery_columnIndex_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Table_FilterQuery_cellValue_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_Table_FilterQuery_cellValue_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Table_FilterQuery_operation_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_Table_FilterQuery_operation_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Table_SortQuery_columnIndex_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_Table_SortQuery_columnIndex_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Table_SortQuery_operation_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_Table_SortQuery_operation_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_Table_SortQuery();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_Table_SortQuery(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_Table();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_Table(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_Table_AddColumn(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Table_RemoveColumn(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_Table_ColumnName(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_Table_GetColumnType(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_Table_GetColumnCount(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_Table_GetRowCount(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_Table_AddRow__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_Table_AddRow__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_Table_AddRow__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, bool jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_Table_AddRow__SWIG_3(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_Table_RemoveRow(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Table_RemoveRows(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_Table_UpdateCell__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, uint jarg3, int jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_Table_UpdateCell__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, uint jarg3, string jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_Table_UpdateCellByIndex__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, uint jarg3, int jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_Table_UpdateCellByIndex__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, uint jarg3, string jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Table_GetCellValueByIndex(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, uint jarg3, out int jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_Table_GetRowByID(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_Table_GetRowByIndex(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, ref int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Table_Clear(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_Table_GetColumns(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_Table_GetRows(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_Table_GetAvailableRowId(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_Table_CopyData(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_Table_GetListHeadHelper(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Table_SortTableHelper(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, uint jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Table_GetCellValueByIndexHelper__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, uint jarg3, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg4, out int jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_Table_GetCellValueByIndexHelper__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, uint jarg3, string jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Table_PrintColumnHeaders(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, int jarg3, char jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Table_PrintRow(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, int jarg3, char jarg4, bool jarg5, global::System.Runtime.InteropServices.HandleRef jarg6);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_Table_QueryTableHelper(global::System.Runtime.InteropServices.HandleRef jarg1, [In, MarshalAs(UnmanagedType.LPArray)]uint[] jarg2, uint jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, uint jarg5, [In, MarshalAs(UnmanagedType.LPArray)]uint[] jarg6, uint jarg7, global::System.Runtime.InteropServices.HandleRef jarg8);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_Table_UpdateCell__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, uint jarg3, int jarg4, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_Table_UpdateCellByIndex__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, uint jarg3, int jarg4, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_Table_ColumnIndexHelper(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransferCBInterface_OnFileStruct_fileIndex_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_FileListTransferCBInterface_OnFileStruct_fileIndex_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransferCBInterface_OnFileStruct_fileName_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_FileListTransferCBInterface_OnFileStruct_fileName_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransferCBInterface_OnFileStruct_fileData_set(global::System.Runtime.InteropServices.HandleRef jarg1, IntPtr jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern IntPtr CSharp_RakNet_FileListTransferCBInterface_OnFileStruct_fileData_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransferCBInterface_OnFileStruct_byteLengthOfThisFile_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_FileListTransferCBInterface_OnFileStruct_byteLengthOfThisFile_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransferCBInterface_OnFileStruct_bytesDownloadedForThisFile_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_FileListTransferCBInterface_OnFileStruct_bytesDownloadedForThisFile_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransferCBInterface_OnFileStruct_setID_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ushort CSharp_RakNet_FileListTransferCBInterface_OnFileStruct_setID_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransferCBInterface_OnFileStruct_numberOfFilesInThisSet_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_FileListTransferCBInterface_OnFileStruct_numberOfFilesInThisSet_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransferCBInterface_OnFileStruct_byteLengthOfThisSet_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_FileListTransferCBInterface_OnFileStruct_byteLengthOfThisSet_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransferCBInterface_OnFileStruct_bytesDownloadedForThisSet_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_FileListTransferCBInterface_OnFileStruct_bytesDownloadedForThisSet_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransferCBInterface_OnFileStruct_context_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_FileListTransferCBInterface_OnFileStruct_context_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransferCBInterface_OnFileStruct_senderSystemAddress_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_FileListTransferCBInterface_OnFileStruct_senderSystemAddress_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransferCBInterface_OnFileStruct_senderGuid_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_FileListTransferCBInterface_OnFileStruct_senderGuid_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_FileListTransferCBInterface_OnFileStruct();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_FileListTransferCBInterface_OnFileStruct(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransferCBInterface_FileProgressStruct_onFileStruct_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_FileListTransferCBInterface_FileProgressStruct_onFileStruct_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransferCBInterface_FileProgressStruct_partCount_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_FileListTransferCBInterface_FileProgressStruct_partCount_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransferCBInterface_FileProgressStruct_partTotal_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_FileListTransferCBInterface_FileProgressStruct_partTotal_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransferCBInterface_FileProgressStruct_dataChunkLength_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_FileListTransferCBInterface_FileProgressStruct_dataChunkLength_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransferCBInterface_FileProgressStruct_firstDataChunk_set(global::System.Runtime.InteropServices.HandleRef jarg1, IntPtr jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern IntPtr CSharp_RakNet_FileListTransferCBInterface_FileProgressStruct_firstDataChunk_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransferCBInterface_FileProgressStruct_iriDataChunk_set(global::System.Runtime.InteropServices.HandleRef jarg1, IntPtr jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern IntPtr CSharp_RakNet_FileListTransferCBInterface_FileProgressStruct_iriDataChunk_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransferCBInterface_FileProgressStruct_iriWriteOffset_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_FileListTransferCBInterface_FileProgressStruct_iriWriteOffset_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransferCBInterface_FileProgressStruct_senderSystemAddress_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_FileListTransferCBInterface_FileProgressStruct_senderSystemAddress_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransferCBInterface_FileProgressStruct_senderGuid_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_FileListTransferCBInterface_FileProgressStruct_senderGuid_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransferCBInterface_FileProgressStruct_allocateIrIDataChunkAutomatically_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_FileListTransferCBInterface_FileProgressStruct_allocateIrIDataChunkAutomatically_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_FileListTransferCBInterface_FileProgressStruct();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_FileListTransferCBInterface_FileProgressStruct(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransferCBInterface_DownloadCompleteStruct_setID_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ushort CSharp_RakNet_FileListTransferCBInterface_DownloadCompleteStruct_setID_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransferCBInterface_DownloadCompleteStruct_numberOfFilesInThisSet_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_FileListTransferCBInterface_DownloadCompleteStruct_numberOfFilesInThisSet_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransferCBInterface_DownloadCompleteStruct_byteLengthOfThisSet_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_FileListTransferCBInterface_DownloadCompleteStruct_byteLengthOfThisSet_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransferCBInterface_DownloadCompleteStruct_senderSystemAddress_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_FileListTransferCBInterface_DownloadCompleteStruct_senderSystemAddress_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransferCBInterface_DownloadCompleteStruct_senderGuid_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_FileListTransferCBInterface_DownloadCompleteStruct_senderGuid_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_FileListTransferCBInterface_DownloadCompleteStruct();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_FileListTransferCBInterface_DownloadCompleteStruct(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_FileListTransferCBInterface();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_FileListTransferCBInterface(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_FileListTransferCBInterface_OnFile(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransferCBInterface_OnFileProgress(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_FileListTransferCBInterface_Update(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_FileListTransferCBInterface_UpdateSwigExplicitFileListTransferCBInterface(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_FileListTransferCBInterface_OnDownloadComplete(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_FileListTransferCBInterface_OnDownloadCompleteSwigExplicitFileListTransferCBInterface(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransferCBInterface_OnDereference(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransferCBInterface_OnDereferenceSwigExplicitFileListTransferCBInterface(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransferCBInterface_director_connect(global::System.Runtime.InteropServices.HandleRef jarg1, FileListTransferCBInterface.SwigDelegateFileListTransferCBInterface_0 delegate0, FileListTransferCBInterface.SwigDelegateFileListTransferCBInterface_1 delegate1, FileListTransferCBInterface.SwigDelegateFileListTransferCBInterface_2 delegate2, FileListTransferCBInterface.SwigDelegateFileListTransferCBInterface_3 delegate3, FileListTransferCBInterface.SwigDelegateFileListTransferCBInterface_4 delegate4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_IncrementalReadInterface();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_IncrementalReadInterface(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_IncrementalReadInterface_GetFilePart(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, uint jarg3, uint jarg4, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg5, global::System.Runtime.InteropServices.HandleRef jarg6);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_FileListNodeContext__SWIG_0();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_FileListNodeContext__SWIG_1(byte jarg1, uint jarg2, uint jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_FileListNodeContext(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListNodeContext_op_set(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern byte CSharp_RakNet_FileListNodeContext_op_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListNodeContext_flnc_extraData1_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_FileListNodeContext_flnc_extraData1_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListNodeContext_flnc_extraData2_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_FileListNodeContext_flnc_extraData2_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListNodeContext_flnc_extraData3_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_FileListNodeContext_flnc_extraData3_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListNodeContext_dataPtr_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_FileListNodeContext_dataPtr_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListNodeContext_dataLength_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_FileListNodeContext_dataLength_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListNode_filename_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_FileListNode_filename_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListNode_fullPathToFile_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_FileListNode_fullPathToFile_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListNode_data_set(global::System.Runtime.InteropServices.HandleRef jarg1, IntPtr jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern IntPtr CSharp_RakNet_FileListNode_data_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListNode_dataLengthBytes_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_FileListNode_dataLengthBytes_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListNode_fileLengthBytes_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_FileListNode_fileLengthBytes_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListNode_context_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_FileListNode_context_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListNode_isAReference_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_FileListNode_isAReference_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_FileListNode();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListNode_SetData(global::System.Runtime.InteropServices.HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_FileListNode(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_FileListProgress_GetInstance();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListProgress_DestroyInstance(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_FileListProgress();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_FileListProgress(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListProgress_OnAddFilesFromDirectoryStarted(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, string jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListProgress_OnDirectory(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListProgress_OnFile(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, string jarg3, string jarg4, uint jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListProgress_OnFilePush(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, uint jarg3, uint jarg4, uint jarg5, bool jarg6, global::System.Runtime.InteropServices.HandleRef jarg7, ushort jarg8);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListProgress_OnFilePushesComplete(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, ushort jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListProgress_OnSendAborted(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_FLP_Printf_GetInstance();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FLP_Printf_DestroyInstance(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_FLP_Printf();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_FLP_Printf(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FLP_Printf_OnAddFilesFromDirectoryStarted(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, string jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FLP_Printf_OnDirectory(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FLP_Printf_OnFilePushesComplete(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, ushort jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FLP_Printf_OnSendAborted(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_FileList_GetInstance();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileList_DestroyInstance(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_FileList();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_FileList(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileList_AddFilesFromDirectory(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3, bool jarg4, bool jarg5, bool jarg6, global::System.Runtime.InteropServices.HandleRef jarg7);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileList_Clear(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileList_Serialize(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_FileList_Deserialize(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileList_ListMissingOrChangedFiles(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, bool jarg4, bool jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileList_GetDeltaToCurrent(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, string jarg4, string jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileList_PopulateDataFromDisk(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, bool jarg3, bool jarg4, bool jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileList_FlagFilesAsReferences(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileList_WriteDataToDisk(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileList_AddFile__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileList_DeleteFiles(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileList_AddCallback(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileList_RemoveCallback(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileList_ClearCallbacks(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileList_fileList_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_FileList_fileList_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_FileList_FixEndingSlash(string jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileList_AddFile__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg4, uint jarg5, uint jarg6, global::System.Runtime.InteropServices.HandleRef jarg7, bool jarg8);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileList_AddFile__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg4, uint jarg5, uint jarg6, global::System.Runtime.InteropServices.HandleRef jarg7);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_REMOTE_MAX_TEXT_INPUT_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_TransportInterface(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_TransportInterface_Start(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2, bool jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TransportInterface_Stop(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TransportInterface_CloseConnection(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_TransportInterface_Receive(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TransportInterface_DeallocatePacket(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_TransportInterface_HasNewIncomingConnection(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_TransportInterface_HasLostConnection(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_TransportInterface_GetCommandParser(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_TransportInterface_Send(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_CommandParserInterface(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_CommandParserInterface_GetName(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_CommandParserInterface_OnNewIncomingConnection(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_CommandParserInterface_OnConnectionLost(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_CommandParserInterface_SendHelp(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_CommandParserInterface_OnCommand(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, uint jarg3, [In, MarshalAs(UnmanagedType.LPArray)]string[] jarg4, global::System.Runtime.InteropServices.HandleRef jarg5, global::System.Runtime.InteropServices.HandleRef jarg6, string jarg7);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_CommandParserInterface_OnTransportChange(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_CommandParserInterface_SendCommandList(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern byte CSharp_RakNet_CommandParserInterface_VARIABLE_NUMBER_OF_PARAMETERS_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_CommandParserInterface_RegisterCommand(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2, string jarg3, string jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_CommandParserInterface_ReturnResult__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, string jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_CommandParserInterface_ReturnResult__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_CommandParserInterface_ReturnResult__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, string jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_CommandParserInterface_ReturnResult__SWIG_3(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, string jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_CommandParserInterface_ReturnResult__SWIG_4(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_LogCommandParser_GetInstance();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_LogCommandParser_DestroyInstance(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_LogCommandParser();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_LogCommandParser(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_LogCommandParser_OnCommand(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, uint jarg3, [In, MarshalAs(UnmanagedType.LPArray)]string[] jarg4, global::System.Runtime.InteropServices.HandleRef jarg5, global::System.Runtime.InteropServices.HandleRef jarg6, string jarg7);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern string CSharp_RakNet_LogCommandParser_GetName(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_LogCommandParser_SendHelp(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_LogCommandParser_AddChannel(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_LogCommandParser_WriteLog(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_LogCommandParser_OnNewIncomingConnection(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_LogCommandParser_OnConnectionLost(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_LogCommandParser_OnTransportChange(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_MESSAGE_FILTER_MAX_MESSAGE_ID_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_MessageFilter_GetInstance();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_MessageFilter_DestroyInstance(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_MessageFilter();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_MessageFilter(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_MessageFilter_SetAutoAddNewConnectionsToFilter(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_MessageFilter_SetAllowMessageID(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, int jarg3, int jarg4, int jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_MessageFilter_SetAllowRPC4(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, string jarg3, int jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_MessageFilter_SetActionOnDisallowedMessage(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, bool jarg3, uint jarg4, int jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_MessageFilter_SetFilterMaxTime(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, bool jarg3, uint jarg4, int jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_MessageFilter_GetSystemFilterSet(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_MessageFilter_SetSystemFilterSet(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_MessageFilter_GetSystemCount(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_MessageFilter_GetFilterSetCount(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_MessageFilter_GetFilterSetIDByIndex(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_MessageFilter_DeleteFilterSet(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_DirectoryDeltaTransfer_GetInstance();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_DirectoryDeltaTransfer_DestroyInstance(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_DirectoryDeltaTransfer();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_DirectoryDeltaTransfer(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_DirectoryDeltaTransfer_SetFileListTransferPlugin(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_DirectoryDeltaTransfer_SetApplicationDirectory(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_DirectoryDeltaTransfer_SetUploadSendParameters(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, char jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_DirectoryDeltaTransfer_AddUploadsFromSubdirectory(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ushort CSharp_RakNet_DirectoryDeltaTransfer_DownloadFromSubdirectory__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3, bool jarg4, global::System.Runtime.InteropServices.HandleRef jarg5, global::System.Runtime.InteropServices.HandleRef jarg6, int jarg7, char jarg8, global::System.Runtime.InteropServices.HandleRef jarg9);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ushort CSharp_RakNet_DirectoryDeltaTransfer_DownloadFromSubdirectory__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, string jarg3, string jarg4, bool jarg5, global::System.Runtime.InteropServices.HandleRef jarg6, global::System.Runtime.InteropServices.HandleRef jarg7, int jarg8, char jarg9, global::System.Runtime.InteropServices.HandleRef jarg10);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_DirectoryDeltaTransfer_GenerateHashes(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, string jarg3, bool jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_DirectoryDeltaTransfer_ClearUploads(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_DirectoryDeltaTransfer_GetNumberOfFilesForUpload(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_DirectoryDeltaTransfer_SetDownloadRequestIncrementalReadInterface(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_FileListTransfer_GetInstance();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransfer_DestroyInstance(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_FileListTransfer();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_FileListTransfer(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransfer_StartIncrementalReadThreads__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransfer_StartIncrementalReadThreads__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ushort CSharp_RakNet_FileListTransfer_SetupReceive(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, bool jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransfer_Send__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, ushort jarg5, int jarg6, char jarg7, global::System.Runtime.InteropServices.HandleRef jarg8, uint jarg9);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransfer_Send__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, ushort jarg5, int jarg6, char jarg7, global::System.Runtime.InteropServices.HandleRef jarg8);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransfer_Send__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, ushort jarg5, int jarg6, char jarg7);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_FileListTransfer_GetPendingFilesToAddress(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransfer_CancelReceive(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransfer_RemoveReceiver(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_FileListTransfer_IsHandlerActive(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransfer_AddCallback(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransfer_RemoveCallback(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_FileListTransfer_ClearCallbacks(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_ThreadsafePacketLogger();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_ThreadsafePacketLogger(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_PacketConsoleLogger();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_PacketConsoleLogger_SetLogCommandParser(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_PacketConsoleLogger_WriteLog(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_PacketConsoleLogger(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_ConnectionGraph2_GetInstance();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_ConnectionGraph2_DestroyInstance(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_ConnectionGraph2();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_ConnectionGraph2(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_ConnectionGraph2_GetConnectionListForRemoteSystem(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, out uint jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_ConnectionGraph2_ConnectionExists(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ushort CSharp_RakNet_ConnectionGraph2_GetPingBetweenSystems(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_ConnectionGraph2_GetLowestAveragePingSystem(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_ConnectionGraph2_SetAutoProcessNewConnections(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_ConnectionGraph2_GetAutoProcessNewConnections(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_ConnectionGraph2_AddParticipant(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_ConnectionGraph2_GetConnectionListForRemoteSystemHelper(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, ref uint jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_ConnectionGraph2_GetParticipantListHelper(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ulong CSharp_RakNet_GetTime();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_GetTimeMS();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ulong CSharp_RakNet_GetTimeUS();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_GreaterThan(ulong jarg1, ulong jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_LessThan(ulong jarg1, ulong jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakNetListRakNetGUID__SWIG_0();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_RakNetListRakNetGUID(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakNetListRakNetGUID__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetListRakNetGUID_CopyData(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetListRakNetGUID_Get(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListRakNetGUID_Push(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetListRakNetGUID_Pop(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListRakNetGUID_Insert__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, uint jarg3, string jarg4, uint jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListRakNetGUID_Insert__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListRakNetGUID_Replace__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, uint jarg4, string jarg5, uint jarg6);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListRakNetGUID_Replace__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListRakNetGUID_RemoveAtIndex(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListRakNetGUID_RemoveAtIndexFast(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListRakNetGUID_RemoveFromEnd__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListRakNetGUID_RemoveFromEnd__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakNetListRakNetGUID_GetIndexOf(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakNetListRakNetGUID_Size(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListRakNetGUID_Clear(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListRakNetGUID_Preallocate(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListRakNetGUID_Compress(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakNetListSystemAddress__SWIG_0();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_RakNetListSystemAddress(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakNetListSystemAddress__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetListSystemAddress_CopyData(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetListSystemAddress_Get(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListSystemAddress_Push(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetListSystemAddress_Pop(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListSystemAddress_Insert__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, uint jarg3, string jarg4, uint jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListSystemAddress_Insert__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListSystemAddress_Replace__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, uint jarg4, string jarg5, uint jarg6);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListSystemAddress_Replace__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListSystemAddress_RemoveAtIndex(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListSystemAddress_RemoveAtIndexFast(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListSystemAddress_RemoveFromEnd__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListSystemAddress_RemoveFromEnd__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakNetListSystemAddress_GetIndexOf(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakNetListSystemAddress_Size(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListSystemAddress_Clear(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListSystemAddress_Preallocate(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListSystemAddress_Compress(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakNetListRakString__SWIG_0();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_RakNetListRakString(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakNetListRakString__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetListRakString_CopyData(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetListRakString_Get(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListRakString_Push(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetListRakString_Pop(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListRakString_Insert__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, uint jarg3, string jarg4, uint jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListRakString_Insert__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListRakString_Replace__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, uint jarg4, string jarg5, uint jarg6);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListRakString_Replace__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListRakString_RemoveAtIndex(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListRakString_RemoveAtIndexFast(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListRakString_RemoveFromEnd__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListRakString_RemoveFromEnd__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakNetListRakString_GetIndexOf(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakNetListRakString_Size(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListRakString_Clear(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListRakString_Preallocate(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListRakString_Compress(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakNetListCell__SWIG_0();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_RakNetListCell(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakNetListCell__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetListCell_CopyData(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetListCell_Get(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListCell_Push(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetListCell_Pop(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListCell_Insert__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, uint jarg3, string jarg4, uint jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListCell_Insert__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListCell_Replace__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, uint jarg4, string jarg5, uint jarg6);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListCell_Replace__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListCell_RemoveAtIndex(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListCell_RemoveAtIndexFast(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListCell_RemoveFromEnd__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListCell_RemoveFromEnd__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakNetListCell_Size(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListCell_Clear(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListCell_Preallocate(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListCell_Compress(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakNetListColumnDescriptor__SWIG_0();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_RakNetListColumnDescriptor(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakNetListColumnDescriptor__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetListColumnDescriptor_CopyData(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetListColumnDescriptor_Get(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListColumnDescriptor_Push(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetListColumnDescriptor_Pop(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListColumnDescriptor_Insert__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, uint jarg3, string jarg4, uint jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListColumnDescriptor_Insert__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListColumnDescriptor_Replace__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, uint jarg4, string jarg5, uint jarg6);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListColumnDescriptor_Replace__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListColumnDescriptor_RemoveAtIndex(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListColumnDescriptor_RemoveAtIndexFast(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListColumnDescriptor_RemoveFromEnd__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListColumnDescriptor_RemoveFromEnd__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakNetListColumnDescriptor_Size(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListColumnDescriptor_Clear(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListColumnDescriptor_Preallocate(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListColumnDescriptor_Compress(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakNetListTableRow__SWIG_0();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_RakNetListTableRow(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakNetListTableRow__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetListTableRow_CopyData(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetListTableRow_Get(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListTableRow_Push(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetListTableRow_Pop(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListTableRow_Insert__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, uint jarg3, string jarg4, uint jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListTableRow_Insert__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListTableRow_Replace__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, uint jarg4, string jarg5, uint jarg6);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListTableRow_Replace__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListTableRow_RemoveAtIndex(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListTableRow_RemoveAtIndexFast(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListTableRow_RemoveFromEnd__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListTableRow_RemoveFromEnd__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakNetListTableRow_Size(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListTableRow_Clear(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListTableRow_Preallocate(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListTableRow_Compress(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakNetListFileListNode__SWIG_0();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_RakNetListFileListNode(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakNetListFileListNode__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetListFileListNode_CopyData(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetListFileListNode_Get(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListFileListNode_Push(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetListFileListNode_Pop(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListFileListNode_Insert__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, uint jarg3, string jarg4, uint jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListFileListNode_Insert__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListFileListNode_Replace__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, uint jarg4, string jarg5, uint jarg6);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListFileListNode_Replace__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListFileListNode_RemoveAtIndex(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListFileListNode_RemoveAtIndexFast(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListFileListNode_RemoveFromEnd__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListFileListNode_RemoveFromEnd__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakNetListFileListNode_Size(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListFileListNode_Clear(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListFileListNode_Preallocate(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListFileListNode_Compress(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakNetListFilterQuery__SWIG_0();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_RakNetListFilterQuery(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakNetListFilterQuery__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetListFilterQuery_CopyData(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetListFilterQuery_Get(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListFilterQuery_Push(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetListFilterQuery_Pop(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListFilterQuery_Insert__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, uint jarg3, string jarg4, uint jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListFilterQuery_Insert__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListFilterQuery_Replace__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, uint jarg4, string jarg5, uint jarg6);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListFilterQuery_Replace__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListFilterQuery_RemoveAtIndex(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListFilterQuery_RemoveAtIndexFast(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListFilterQuery_RemoveFromEnd__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListFilterQuery_RemoveFromEnd__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakNetListFilterQuery_Size(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListFilterQuery_Clear(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListFilterQuery_Preallocate(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListFilterQuery_Compress(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakNetListSortQuery__SWIG_0();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_RakNetListSortQuery(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakNetListSortQuery__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetListSortQuery_CopyData(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetListSortQuery_Get(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListSortQuery_Push(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetListSortQuery_Pop(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListSortQuery_Insert__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, uint jarg3, string jarg4, uint jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListSortQuery_Insert__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListSortQuery_Replace__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, uint jarg4, string jarg5, uint jarg6);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListSortQuery_Replace__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListSortQuery_RemoveAtIndex(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListSortQuery_RemoveAtIndexFast(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListSortQuery_RemoveFromEnd__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListSortQuery_RemoveFromEnd__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakNetListSortQuery_Size(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListSortQuery_Clear(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListSortQuery_Preallocate(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListSortQuery_Compress(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakNetListCellPointer__SWIG_0();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_RakNetListCellPointer(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakNetListCellPointer__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetListCellPointer_CopyData(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListCellPointer_Push(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListCellPointer_Insert__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, uint jarg3, string jarg4, uint jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListCellPointer_Insert__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListCellPointer_Replace__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, uint jarg4, string jarg5, uint jarg6);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListCellPointer_Replace__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListCellPointer_RemoveAtIndex(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListCellPointer_RemoveAtIndexFast(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListCellPointer_RemoveFromEnd__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListCellPointer_RemoveFromEnd__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakNetListCellPointer_GetIndexOf(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakNetListCellPointer_Size(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListCellPointer_Clear(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListCellPointer_Preallocate(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListCellPointer_Compress(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetListCellPointer_GetHelper(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetListCellPointer_PopHelper(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_UnsignedShortPointer();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_UnsignedShortPointer(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UnsignedShortPointer_assign(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern ushort CSharp_RakNet_UnsignedShortPointer_value(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_UnsignedShortPointer_cast(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_UnsignedShortPointer_frompointer(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakNetListUnsignedShort__SWIG_0();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_RakNetListUnsignedShort(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakNetListUnsignedShort__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetListUnsignedShort_CopyData(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetListUnsignedShort_GetHelper(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListUnsignedShort_Push(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetListUnsignedShort_PopHelper(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListUnsignedShort_Insert__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2, uint jarg3, string jarg4, uint jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListUnsignedShort_Insert__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListUnsignedShort_Replace__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2, ushort jarg3, uint jarg4, string jarg5, uint jarg6);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListUnsignedShort_Replace__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListUnsignedShort_RemoveAtIndex(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListUnsignedShort_RemoveAtIndexFast(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListUnsignedShort_RemoveFromEnd__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListUnsignedShort_RemoveFromEnd__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakNetListUnsignedShort_GetIndexOf(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakNetListUnsignedShort_Size(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListUnsignedShort_Clear(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListUnsignedShort_Preallocate(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListUnsignedShort_Compress(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_UnsignedIntPointer();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_UnsignedIntPointer(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_UnsignedIntPointer_assign(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_UnsignedIntPointer_value(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_UnsignedIntPointer_cast(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_UnsignedIntPointer_frompointer(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakNetListUnsignedInt__SWIG_0();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_RakNetListUnsignedInt(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakNetListUnsignedInt__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetListUnsignedInt_CopyData(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetListUnsignedInt_GetHelper(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListUnsignedInt_Push(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetListUnsignedInt_PopHelper(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListUnsignedInt_Insert__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, uint jarg3, string jarg4, uint jarg5);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListUnsignedInt_Insert__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListUnsignedInt_Replace__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, uint jarg3, uint jarg4, string jarg5, uint jarg6);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListUnsignedInt_Replace__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListUnsignedInt_RemoveAtIndex(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListUnsignedInt_RemoveAtIndexFast(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListUnsignedInt_RemoveFromEnd__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListUnsignedInt_RemoveFromEnd__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakNetListUnsignedInt_GetIndexOf(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakNetListUnsignedInt_Size(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListUnsignedInt_Clear(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListUnsignedInt_Preallocate(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, string jarg3, uint jarg4);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetListUnsignedInt_Compress(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, uint jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetPageRow_isLeaf_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakNetPageRow_isLeaf_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetPageRow_size_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakNetPageRow_size_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetPageRow_next_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetPageRow_next_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetPageRow_previous_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetPageRow_previous_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakNetPageRow();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_RakNetPageRow(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetBPlusTreeRow_ReturnAction_key1_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakNetBPlusTreeRow_ReturnAction_key1_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetBPlusTreeRow_ReturnAction_key2_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakNetBPlusTreeRow_ReturnAction_key2_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakNetBPlusTreeRow_ReturnAction_NO_ACTION_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakNetBPlusTreeRow_ReturnAction_REPLACE_KEY1_WITH_KEY2_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakNetBPlusTreeRow_ReturnAction_PUSH_KEY_TO_PARENT_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakNetBPlusTreeRow_ReturnAction_SET_BRANCH_KEY_get();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetBPlusTreeRow_ReturnAction_action_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern int CSharp_RakNet_RakNetBPlusTreeRow_ReturnAction_action_get(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakNetBPlusTreeRow_ReturnAction();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_RakNetBPlusTreeRow_ReturnAction(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_new_RakNetBPlusTreeRow();

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_delete_RakNetBPlusTreeRow(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetBPlusTreeRow_SetPoolPageSize(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakNetBPlusTreeRow_Insert(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetBPlusTreeRow_Clear(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern uint CSharp_RakNet_RakNetBPlusTreeRow_Size(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern bool CSharp_RakNet_RakNetBPlusTreeRow_IsEmpty(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetBPlusTreeRow_GetListHead(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakNetBPlusTreeRow_GetDataHead(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetBPlusTreeRow_PrintLeaves(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern void CSharp_RakNet_RakNetBPlusTreeRow_PrintGraph(global::System.Runtime.InteropServices.HandleRef jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_RakPeer_SWIGUpcast(global::System.IntPtr jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_PacketLogger_SWIGUpcast(global::System.IntPtr jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_PacketFileLogger_SWIGUpcast(global::System.IntPtr jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_NatTypeDetectionClient_SWIGUpcast(global::System.IntPtr jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_NatPunchthroughDebugInterface_Printf_SWIGUpcast(global::System.IntPtr jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_NatPunchthroughDebugInterface_PacketLogger_SWIGUpcast(global::System.IntPtr jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_NatPunchthroughClient_SWIGUpcast(global::System.IntPtr jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_Router2_SWIGUpcast(global::System.IntPtr jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_UDPProxyClient_SWIGUpcast(global::System.IntPtr jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_FullyConnectedMesh2_SWIGUpcast(global::System.IntPtr jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_ReadyEvent_SWIGUpcast(global::System.IntPtr jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_TeamManager_SWIGUpcast(global::System.IntPtr jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_NatPunchthroughServerDebugInterface_Printf_SWIGUpcast(global::System.IntPtr jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_NatPunchthroughServerDebugInterface_PacketLogger_SWIGUpcast(global::System.IntPtr jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_NatPunchthroughServer_SWIGUpcast(global::System.IntPtr jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_UDPProxyServer_SWIGUpcast(global::System.IntPtr jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_UDPProxyCoordinator_SWIGUpcast(global::System.IntPtr jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_NatTypeDetectionServer_SWIGUpcast(global::System.IntPtr jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_FLP_Printf_SWIGUpcast(global::System.IntPtr jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_LogCommandParser_SWIGUpcast(global::System.IntPtr jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_MessageFilter_SWIGUpcast(global::System.IntPtr jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_DirectoryDeltaTransfer_SWIGUpcast(global::System.IntPtr jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_FileListTransfer_SWIGUpcast(global::System.IntPtr jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_ThreadsafePacketLogger_SWIGUpcast(global::System.IntPtr jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_PacketConsoleLogger_SWIGUpcast(global::System.IntPtr jarg1);

        [global::System.Runtime.InteropServices.DllImport(LibName,  CallingConvention = CallingConvention.Cdecl)]
        public static extern global::System.IntPtr CSharp_RakNet_ConnectionGraph2_SWIGUpcast(global::System.IntPtr jarg1);
    }

}
